Name, Date, Achievement, Tags, Impact, Source
"Muhammad ibn Musa al-Khwarizmi", "800", "The term '#{algorithm}' is derived from the algorism, the technique of performing arithmetic with Hindu-Arabic numerals developed by al-Khwarizmi. Both '#{algorithm}' and 'algorism' are derived from the Latinized forms of al-Khwarizmi's name, Algoritmi and Algorismi, respectively.", "Mathematics, Algorithm", "5", "https://en.wikipedia.org/wiki/Muhammad_ibn_Musa_al-Khwarizmi#Arithmetic"
"John Vincent Atanasoff", "1939", "The #{Atanasoff-Berry computer} (ABC) was the first automatic #{electronic digital computer|electronic computer}. The ABC's priority is debated among historians of computer technology, because it was not programmable, nor Turing-complete.", "Electronic Computer, Computer", "4", "https://en.wikipedia.org/wiki/Atanasoff%E2%80%93Berry_computer"
"Charles Babbage", "1825", "Invented the #{Difference Engine}, an automatic mechanical calculator designed to tabulate polynomial functions. It was not programmable, nor Turing-complete.", "Difference Engine, Mechanical Computer, Computer", "5", "https://en.wikipedia.org/wiki/Difference_engine"
"Charles Babbage", "1837", "Designed the #{Analytical Engine}. The first, general-purpose, programmable computer. It was 100 years ahead of it's time.", "Analytical Engine, Mechanical Computer, Computer, Punch Cards", "5", "https://en.wikipedia.org/wiki/Analytical_engine"
"John Backus", "1953", "Created #{Speedcoding}, also known As #{Speedcode}, the first high level #{programming language} built for an #{IBM} computer.", "Speedcoding, Speedcode, Programming Language, IBM", "4", "https://en.wikipedia.org/wiki/Speedcoding"
"John Backus", "1954", "Lead a team who developed #{FORTRAN} for the #{IBM} 704 computer. #{FORTRAN} was one of the first high-level #{programming languages|programming language} that saw wide-spread use.", "FORTRAN, Programming Language, IBM", "5", "https://en.wikipedia.org/wiki/Fortran"
"John Backus", "1959", "Served on the design committee for #{ALGOL} 60, an incredibly influential #{programming language} which introduced lexical scoping, code blocks and many syntactical elements common today (if, then, while, for, do, begin, end, etc).", "ALGOL, Programming Language", "4", "https://en.wikipedia.org/wiki/ALGOL_60"
"John Backus", "1960", "Invented the Backus-Naur Form (previously known as Backus Normal Form), a notation for context-free grammars which is used to describe the syntax of #{programming languages|programming language}.", "BNF, Backus-Naur Form, Backus Normal Form, Programming Language", "4", "https://en.wikipedia.org/wiki/Backus%E2%80%93Naur_Form"
"John Backus", "1977", "Created #{FP}, a function-level #{programming language}. #{FP} helped spark an interest in the #{functional programming} paradigm.", "FP, Functional Programming, Function-Level Programming, Programming Language", "2", "https://en.wikipedia.org/wiki/FP_(programming_language)"
"John Backus", "1989", "Created #{FL}, a #{function-level programming} language that is considered a successor to #{FP}.", "FL, Function-Level Programming, Functional Programming, Programming Language", "2", "https://en.wikipedia.org/wiki/FL_(programming_language)"
"Jean Bartik", "1946", "Became one of the six original programmers on #{ENIAC}.", "ENIAC, Programming", "3", "https://en.wikipedia.org/wiki/ENIAC#Programming"
"Jean Bartik", "1948", "Was part of a team charged with developing the concept of the 'stored program #{computer}'.", "Computer", "3", "https://en.wikipedia.org/wiki/Stored-program_computer"
"Jean Bartik", "1949", "Helped develop the #{BINAC} AND #{UNIVAC} I computers.", "BINAC, UNIVAC, Programming, Computer", "3", "https://en.wikipedia.org/wiki/Jean_Bartik#Career_as_a_computer_programmer"
"Tim Berners-Lee", "1980", "Invented ENQUIRE, a system for sharing documents over the #{Internet}.", "Internet, WWW", "4", "https://en.wikipedia.org/wiki/ENQUIRE"
"Tim Berners-Lee", "1989", "Invented WorldWideWeb, the first #{Web Browser|WWW}.", "Internet, WWW", "5", "https://en.wikipedia.org/wiki/WorldWideWeb"
"Tim Berners-Lee", "1990", "Along with Ari Luotonen and Henrik Frystyk, invented CERN HTTPd, the first #{Web Server|HTTP}. It ran as a daemon and was written in C.", "Internet, WWW, HTTP", "5", "https://en.wikipedia.org/wiki/CERN_httpd"
"Tim Berners-Lee", "1990", "Specified #{HTML}, an SGML-based markup language for describing #{hypertext} documents. Originally, #{HTML} only included 18 tags.", "Internet, Hypertext, WWW, HTML", "5", "https://en.wikipedia.org/wiki/HTML"
"Tim Berners-Lee", "1991", "Formally released the Hypertext Transport Protocol (#{HTTP}) version 0.9 along with a team of Engineers. #{HTTP} v0.9 was only capable of GET requests.", "Internet, WWW, HTTP", "5", "https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol"
"George Boole", "1847", "Invented Symbolic #{Logic}, the basis for Boolean Algebra, a mathematical system for describing logical relations. It would become the basis for electronic #{circuit design}.", "Mathematics, Logic, Circuit Design", "5", "https://en.wikipedia.org/wiki/Boolean_algebra"
"George Boole", "1854", "Published 'The Laws of Thought', which further laid-out #{algebraic logic|Logic}.", "Mathematics, Logic", "4", "https://en.wikipedia.org/wiki/The_Laws_of_Thought"
"Per Brinch Hansen", "1969", "Primary developer of the RC 4000 Multiprogramming System (also known as Monitor), the first #{operating system} to implement a kernel. Although not particularly successful, it was hugely influential in the design of future #{operating systems}.", "Operating System, RC 4000", "3", "https://en.wikipedia.org/wiki/RC_4000_multiprogramming_system"
"Per Brinch Hansen", "1973", "Published 'Operating System Principles', the first comprehensive textbok on #{operating systems}. It was hailed for it's simplicity and clarity in treatment of a complex subject.", "Operating System, Book", "3", "https://en.wikipedia.org/wiki/Per_Brinch_Hansen#Operating_Systems"
"Per Brinch Hansen", "1973", "Along with Tony Hoare, invented #{Monitors}, a construct for allowing #{threads|Concurrency} to have mutual exclusion and the ability to wait/block for conditions to become true.", "Concurrency, Monitors", "3", "https://en.wikipedia.org/wiki/Per_Brinch_Hansen#Operating_Systems"
"Per Brinch Hansen", "1975", "Invented Concurrent #{Pascal}, the first #{programming language} to implement #{monitors}.", "Concurrency, Programming Language, Pascal, Monitors", "3", "https://en.wikipedia.org/wiki/Concurrent_Pascal"
"Per Brinch Hansen", "1977", "Published 'The Architecture of Concurrent Programs', the first comprehensive textbok on #{concurrent programming|Concurrency}.", "Concurrency, Book", "2", "https://en.wikipedia.org/wiki/Per_Brinch_Hansen#Operating_Systems"
"Per Brinch Hansen", "1978", "Published a paper on #{distributed proceses|Distributed Computing}, which introduced concepts which are now known as #{remote procedure calling|RPC} (RPC). RPC is a technique for executing code in a remote address space (such as another computer in a network).", "Distributed Computing, RPC, Paper", "3", "https://en.wikipedia.org/wiki/Remote_procedure_call"
"Nikolay Brusentsov", "1958", "Invented #{Setun}, a balanced #{ternary} #{computer}. Setun used three fundamental values (-1, 0, 1) instead of the more common two values (0, 1) in #{binary} computers.", "Computer, Ternary, Setun", "3", "https://en.wikipedia.org/wiki/Setun"
"Nikolay Brusentsov", "1970", "Invented #{Setun} 70, whose #{CPU} design presented many concepts that would later be incorporated (perhaps independently) into the #{Reduced Instruction-Set Computing|RISC} (RISC) architecture.", "Computer, Setun, RISC, CPU", "3", "http://en.uacomputing.com/persons/brusentsov/"
"Vannevar Bush", "1945", "Published 'As We May Think', an article which introduced the #{Memex} - a theoretical electronic device that would allow users to store and retrieve books, records and communications. The design involved linking documents via association, which would come to be very influential in the creation of #{hypertext} systems.", "Computer, Memex, Hypertext", "4", "https://en.wikipedia.org/wiki/Memex"
"David Caminer", "1951", "Helped design the #{Lyons Electonic Office} (LEO) computer, which was the first business #{computer}. For his effort, David Caminer is often called the world's first Software Engineer.", "Computer, LEO", "3", "https://en.wikipedia.org/wiki/LEO_%28computer%29"
"Vint Cerf", "1973", "Conducted research around the notion of packet-switching #{network|Networking} protocols.", "Networking, Internet", "3", "https://en.wikipedia.org/wiki/Vint_Cerf"
"Vint Cerf", "1975", "Co-designed the #{TCP/IP} #{network|Networking} protocol suite for the US Department of Defense.", "TCP/IP, Networking, Internet", "4", "https://en.wikipedia.org/wiki/Internet_protocol_suite"
"Vint Cerf", "1984", "Lead engineer on MCI Mail, the first commercial #{email} service to be connected to the #{Internet}", "Email, Networking, Internet", "4", "https://en.wikipedia.org/wiki/MCI_Mail"
"Vint Cerf", "1992", "Co-founded the Internet Society to provide guidance for standards and education related to the #{Internet}.", "Internet", "2", "https://en.wikipedia.org/wiki/Internet_Society"
"Noam Chomsky", "1956", "Invented the Chomsky Hierarchy, which is a set of classes of formal grammars that have become especially important in the creation of #{compilers} and #{interpreters} in #{computer programming|Programming Language}.", "Compiler, Programming Language, Formal Grammar", "4", "https://en.wikipedia.org/wiki/Chomsky_hierarchy"
"Alonzo Church", "1936", "Invented #{lambda calculus}, a formal mathematical system for presenting #{computation} based purely on function abstraction and application. Lambda calculus proved to be a universal model of #{computation} that would be incredibly important in the development of #{programming languages}.", "Lambda Calculus, Computation, Programming Language", "5", "https://en.wikipedia.org/wiki/Lambda_calculus"
"Alonzo Church", "1935", "Provided a negative answer to the #{Entscheidungsproblem}, which asks if there is an algorithm to determine if an axiom is true in all models of a theory. This would have great impact on the theory of #{computation} in later years.", "Computation, Entscheidungsproblem", "4", "https://en.wikipedia.org/wiki/Entscheidungsproblem"
"Alonzo Church", "1936", "Co-articulated what has become known as the #{Church-Turing Thesis}, which asserts that for any operation carried out by an algorithm there exists an equivalent #{lambda expression|Lambda Calculus} (or #{Turing Machine}). This would have great impact on the theory of #{computation} in later years.", "Computation, Church-Turing Thesis", "5", "https://en.wikipedia.org/wiki/Church%E2%80%93Turing_thesis"
"Wesley A. Clark", "1955", "Created the logic systems for the #{TX-0} (Transistorized Experimental computer zero) #{computer}, an early fully-transistorized digital computer that was used at MIT.", "Computer, TX-0, Computer", "3", "https://en.wikipedia.org/wiki/TX-0"
"Wesley A. Clark", "1958", "Chief Architect for the #{TX-2} (Transistorized Experimental computer two) #{computer}, an early fully-transistorized digital computer that was important in the advancement of the field of #{artificial intelligence}.", "Computer, TX-2, Computer, Artificial Intelligence", "3", "https://en.wikipedia.org/wiki/TX-2"
"Wesley A. Clark", "1962", "Co-designed #{LINC}, the world's first #{minicomputer} and forerunner to the now ubiquitous personal #{computer}. #{LINC} would go on to inspire many ideas for the wildly successful #{PDP-8} minicomputer.", "Computer, Minicomputer, LINC, Computer", "4", "https://en.wikipedia.org/wiki/LINC"
"Edmund M. Clarke", "1979", "Published a paper proving that for certain #{programming language} constructs it is impossible to obtain good #{Hoare Axiom Systems|Hoare Logic}. The paper demonstrated that #{recursive|Recursion} procedures with parameters in languages with a static scope for identifiers and #{coroutines} in languages that allow parameterless #{recursive|Recursion} procedures cannot be proven correct via the #{Hoare Logic} formal system.", "Programming Language, Hoare Logic", "2", "http://www.cs.cmu.edu/~emc/papers/Papers%20In%20Refereed%20Journals/79_impossible_hoareaxiom.pdf"
"Edmund M. Clarke", "1981", "Along with his student E. Allen Emerson, invented and developed #{model checking}, a system for mathematically verifying that a given model meets a formal specification. This would become important for the verification of hardware systems.", "Model Checking, Hardware", "3", "https://en.wikipedia.org/wiki/Model_checking"
"Edgar F. Codd", "1970", "Published a paper entitled 'A Relational Model of Data for Large Shared Data Banks', which laid the theoretical foundations for relational databases and query languages such as SQL.", "Database, Relational Database", "4", "https://en.wikipedia.org/wiki/Edgar_F._Codd#Work"
"Douglas Engelbart", "1965", "Along with his team, invented the concepts for bitmapped screen displays.", "Bitmap, Hardware", "4", "https://en.wikipedia.org/wiki/Raster_graphics"
"Douglas Engelbart", "1965", "Along with his team, invented early systems implementing the foundations for #{hypertext} - interlinked systems of documents.", "Hypertext, Internet", "4", "https://en.wikipedia.org/wiki/Hypertext#History"
"Douglas Engelbart", "1967", "Along with Bill English, invented the #{computer mouse|Mouse} in the form of a wooden shell atop two metal wheels. It was described as an 'X-Y position indicator for a display system'.", "Mouse, Hardware", "5", "https://en.wikipedia.org/wiki/Computer_mouse"
"Douglas Engelbart", "1968", "Presented and demonstrated original inventions including the #{Computer Mouse|Mouse}, #{Computer Networks|Network}, #{Hypertext} and several others.", "Demonstration", "2", "https://en.wikipedia.org/wiki/The_Mother_of_All_Demos"
"E. Allen Emerson", "1981", "Along with Edmund M. Clarke, invented and developed #{model checking}, a system for mathematically verifying that a given model meets a formal specification. This would become important for the verification of hardware systems.", "Model Checking, Hardware", "3", "https://en.wikipedia.org/wiki/Model_checking"
"Stephen Cook", "1971", "Published the seminal paper 'The Complexity of Theorem Proving Procedures', which introduced the notions of Cook Reduction and #{NP-Completeness|NP-Complete}. NP-Completeness refers to problems for which no efficient algorithm exists. The paper also famously posed the #{P vs. NP} question.", "NP-Complete, Computation, Complexity, P vs. NP", "4", "https://en.wikipedia.org/wiki/NP-complete"
"aMuhammad ibn Musa al-Khwarizmi", "800", "The term '#{algorithm}' is derived from the algorism, the technique of performing arithmetic with Hindu-Arabic numerals developed by al-Khwarizmi. Both '#{algorithm}' and 'algorism' are derived from the Latinized forms of al-Khwarizmi's name, Algoritmi and Algorismi, respectively.", "Mathematics, Algorithm", "5", "https://en.wikipedia.org/wiki/Muhammad_ibn_Musa_al-Khwarizmi#Arithmetic"
"aJohn Vincent Atanasoff", "1939", "The #{Atanasoff-Berry computer} (ABC) was the first automatic #{electronic digital computer|electronic computer}. The ABC's priority is debated among historians of computer technology, because it was not programmable, nor Turing-complete.", "Electronic Computer, Computer", "4", "https://en.wikipedia.org/wiki/Atanasoff%E2%80%93Berry_computer"
"aCharles Babbage", "1825", "Invented the #{Difference Engine}, an automatic mechanical calculator designed to tabulate polynomial functions. It was not programmable, nor Turing-complete.", "Difference Engine, Mechanical Computer, Computer", "5", "https://en.wikipedia.org/wiki/Difference_engine"
"aCharles Babbage", "1837", "Designed the #{Analytical Engine}. The first, general-purpose, programmable computer. It was 100 years ahead of it's time.", "Analytical Engine, Mechanical Computer, Computer, Punch Cards", "5", "https://en.wikipedia.org/wiki/Analytical_engine"
"aJohn Backus", "1953", "Created #{Speedcoding}, also known As #{Speedcode}, the first high level #{programming language} built for an #{IBM} computer.", "Speedcoding, Speedcode, Programming Language, IBM", "4", "https://en.wikipedia.org/wiki/Speedcoding"
"aJohn Backus", "1954", "Lead a team who developed #{FORTRAN} for the #{IBM} 704 computer. #{FORTRAN} was one of the first high-level #{programming languages|programming language} that saw wide-spread use.", "FORTRAN, Programming Language, IBM", "5", "https://en.wikipedia.org/wiki/Fortran"
"aJohn Backus", "1959", "Served on the design committee for #{ALGOL} 60, an incredibly influential #{programming language} which introduced lexical scoping, code blocks and many syntactical elements common today (if, then, while, for, do, begin, end, etc).", "ALGOL, Programming Language", "4", "https://en.wikipedia.org/wiki/ALGOL_60"
"aJohn Backus", "1960", "Invented the Backus-Naur Form (previously known as Backus Normal Form), a notation for context-free grammars which is used to describe the syntax of #{programming languages|programming language}.", "BNF, Backus-Naur Form, Backus Normal Form, Programming Language", "4", "https://en.wikipedia.org/wiki/Backus%E2%80%93Naur_Form"
"aJohn Backus", "1977", "Created #{FP}, a function-level #{programming language}. #{FP} helped spark an interest in the #{functional programming} paradigm.", "FP, Functional Programming, Function-Level Programming, Programming Language", "2", "https://en.wikipedia.org/wiki/FP_(programming_language)"
"aJohn Backus", "1989", "Created #{FL}, a #{function-level programming} language that is considered a successor to #{FP}.", "FL, Function-Level Programming, Functional Programming, Programming Language", "2", "https://en.wikipedia.org/wiki/FL_(programming_language)"
"aJean Bartik", "1946", "Became one of the six original programmers on #{ENIAC}.", "ENIAC, Programming", "3", "https://en.wikipedia.org/wiki/ENIAC#Programming"
"aJean Bartik", "1948", "Was part of a team charged with developing the concept of the 'stored program #{computer}'.", "Computer", "3", "https://en.wikipedia.org/wiki/Stored-program_computer"
"aJean Bartik", "1949", "Helped develop the #{BINAC} AND #{UNIVAC} I computers.", "BINAC, UNIVAC, Programming, Computer", "3", "https://en.wikipedia.org/wiki/Jean_Bartik#Career_as_a_computer_programmer"
"aTim Berners-Lee", "1980", "Invented ENQUIRE, a system for sharing documents over the #{Internet}.", "Internet, WWW", "4", "https://en.wikipedia.org/wiki/ENQUIRE"
"aTim Berners-Lee", "1989", "Invented WorldWideWeb, the first #{Web Browser|WWW}.", "Internet, WWW", "5", "https://en.wikipedia.org/wiki/WorldWideWeb"
"aTim Berners-Lee", "1990", "Along with Ari Luotonen and Henrik Frystyk, invented CERN HTTPd, the first #{Web Server|HTTP}. It ran as a daemon and was written in C.", "Internet, WWW, HTTP", "5", "https://en.wikipedia.org/wiki/CERN_httpd"
"aTim Berners-Lee", "1990", "Specified #{HTML}, an SGML-based markup language for describing #{hypertext} documents. Originally, #{HTML} only included 18 tags.", "Internet, Hypertext, WWW, HTML", "5", "https://en.wikipedia.org/wiki/HTML"
"aTim Berners-Lee", "1991", "Formally released the Hypertext Transport Protocol (#{HTTP}) version 0.9 along with a team of Engineers. #{HTTP} v0.9 was only capable of GET requests.", "Internet, WWW, HTTP", "5", "https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol"
"aGeorge Boole", "1847", "Invented Symbolic #{Logic}, the basis for Boolean Algebra, a mathematical system for describing logical relations. It would become the basis for electronic #{circuit design}.", "Mathematics, Logic, Circuit Design", "5", "https://en.wikipedia.org/wiki/Boolean_algebra"
"aGeorge Boole", "1854", "Published 'The Laws of Thought', which further laid-out #{algebraic logic|Logic}.", "Mathematics, Logic", "4", "https://en.wikipedia.org/wiki/The_Laws_of_Thought"
"aPer Brinch Hansen", "1969", "Primary developer of the RC 4000 Multiprogramming System (also known as Monitor), the first #{operating system} to implement a kernel. Although not particularly successful, it was hugely influential in the design of future #{operating systems}.", "Operating System, RC 4000", "3", "https://en.wikipedia.org/wiki/RC_4000_multiprogramming_system"
"aPer Brinch Hansen", "1973", "Published 'Operating System Principles', the first comprehensive textbok on #{operating systems}. It was hailed for it's simplicity and clarity in treatment of a complex subject.", "Operating System, Book", "3", "https://en.wikipedia.org/wiki/Per_Brinch_Hansen#Operating_Systems"
"aPer Brinch Hansen", "1973", "Along with Tony Hoare, invented #{Monitors}, a construct for allowing #{threads|Concurrency} to have mutual exclusion and the ability to wait/block for conditions to become true.", "Concurrency, Monitors", "3", "https://en.wikipedia.org/wiki/Per_Brinch_Hansen#Operating_Systems"
"aPer Brinch Hansen", "1975", "Invented Concurrent #{Pascal}, the first #{programming language} to implement #{monitors}.", "Concurrency, Programming Language, Pascal, Monitors", "3", "https://en.wikipedia.org/wiki/Concurrent_Pascal"
"aPer Brinch Hansen", "1977", "Published 'The Architecture of Concurrent Programs', the first comprehensive textbok on #{concurrent programming|Concurrency}.", "Concurrency, Book", "2", "https://en.wikipedia.org/wiki/Per_Brinch_Hansen#Operating_Systems"
"aPer Brinch Hansen", "1978", "Published a paper on #{distributed proceses|Distributed Computing}, which introduced concepts which are now known as #{remote procedure calling|RPC} (RPC). RPC is a technique for executing code in a remote address space (such as another computer in a network).", "Distributed Computing, RPC, Paper", "3", "https://en.wikipedia.org/wiki/Remote_procedure_call"
"aNikolay Brusentsov", "1958", "Invented #{Setun}, a balanced #{ternary} #{computer}. Setun used three fundamental values (-1, 0, 1) instead of the more common two values (0, 1) in #{binary} computers.", "Computer, Ternary, Setun", "3", "https://en.wikipedia.org/wiki/Setun"
"aNikolay Brusentsov", "1970", "Invented #{Setun} 70, whose #{CPU} design presented many concepts that would later be incorporated (perhaps independently) into the #{Reduced Instruction-Set Computing|RISC} (RISC) architecture.", "Computer, Setun, RISC, CPU", "3", "http://en.uacomputing.com/persons/brusentsov/"
"aVannevar Bush", "1945", "Published 'As We May Think', an article which introduced the #{Memex} - a theoretical electronic device that would allow users to store and retrieve books, records and communications. The design involved linking documents via association, which would come to be very influential in the creation of #{hypertext} systems.", "Computer, Memex, Hypertext", "4", "https://en.wikipedia.org/wiki/Memex"
"aDavid Caminer", "1951", "Helped design the #{Lyons Electonic Office} (LEO) computer, which was the first business #{computer}. For his effort, David Caminer is often called the world's first Software Engineer.", "Computer, LEO", "3", "https://en.wikipedia.org/wiki/LEO_%28computer%29"
"aVint Cerf", "1973", "Conducted research around the notion of packet-switching #{network|Networking} protocols.", "Networking, Internet", "3", "https://en.wikipedia.org/wiki/Vint_Cerf"
"aVint Cerf", "1975", "Co-designed the #{TCP/IP} #{network|Networking} protocol suite for the US Department of Defense.", "TCP/IP, Networking, Internet", "4", "https://en.wikipedia.org/wiki/Internet_protocol_suite"
"aVint Cerf", "1984", "Lead engineer on MCI Mail, the first commercial #{email} service to be connected to the #{Internet}", "Email, Networking, Internet", "4", "https://en.wikipedia.org/wiki/MCI_Mail"
"aVint Cerf", "1992", "Co-founded the Internet Society to provide guidance for standards and education related to the #{Internet}.", "Internet", "2", "https://en.wikipedia.org/wiki/Internet_Society"
"aNoam Chomsky", "1956", "Invented the Chomsky Hierarchy, which is a set of classes of formal grammars that have become especially important in the creation of #{compilers} and #{interpreters} in #{computer programming|Programming Language}.", "Compiler, Programming Language, Formal Grammar", "4", "https://en.wikipedia.org/wiki/Chomsky_hierarchy"
"aAlonzo Church", "1936", "Invented #{lambda calculus}, a formal mathematical system for presenting #{computation} based purely on function abstraction and application. Lambda calculus proved to be a universal model of #{computation} that would be incredibly important in the development of #{programming languages}.", "Lambda Calculus, Computation, Programming Language", "5", "https://en.wikipedia.org/wiki/Lambda_calculus"
"aAlonzo Church", "1935", "Provided a negative answer to the #{Entscheidungsproblem}, which asks if there is an algorithm to determine if an axiom is true in all models of a theory. This would have great impact on the theory of #{computation} in later years.", "Computation, Entscheidungsproblem", "4", "https://en.wikipedia.org/wiki/Entscheidungsproblem"
"aAlonzo Church", "1936", "Co-articulated what has become known as the #{Church-Turing Thesis}, which asserts that for any operation carried out by an algorithm there exists an equivalent #{lambda expression|Lambda Calculus} (or #{Turing Machine}). This would have great impact on the theory of #{computation} in later years.", "Computation, Church-Turing Thesis", "5", "https://en.wikipedia.org/wiki/Church%E2%80%93Turing_thesis"
"aWesley A. Clark", "1955", "Created the logic systems for the #{TX-0} (Transistorized Experimental computer zero) #{computer}, an early fully-transistorized digital computer that was used at MIT.", "Computer, TX-0, Computer", "3", "https://en.wikipedia.org/wiki/TX-0"
"aWesley A. Clark", "1958", "Chief Architect for the #{TX-2} (Transistorized Experimental computer two) #{computer}, an early fully-transistorized digital computer that was important in the advancement of the field of #{artificial intelligence}.", "Computer, TX-2, Computer, Artificial Intelligence", "3", "https://en.wikipedia.org/wiki/TX-2"
"aWesley A. Clark", "1962", "Co-designed #{LINC}, the world's first #{minicomputer} and forerunner to the now ubiquitous personal #{computer}. #{LINC} would go on to inspire many ideas for the wildly successful #{PDP-8} minicomputer.", "Computer, Minicomputer, LINC, Computer", "4", "https://en.wikipedia.org/wiki/LINC"
"aEdmund M. Clarke", "1979", "Published a paper proving that for certain #{programming language} constructs it is impossible to obtain good #{Hoare Axiom Systems|Hoare Logic}. The paper demonstrated that #{recursive|Recursion} procedures with parameters in languages with a static scope for identifiers and #{coroutines} in languages that allow parameterless #{recursive|Recursion} procedures cannot be proven correct via the #{Hoare Logic} formal system.", "Programming Language, Hoare Logic", "2", "http://www.cs.cmu.edu/~emc/papers/Papers%20In%20Refereed%20Journals/79_impossible_hoareaxiom.pdf"
"aEdmund M. Clarke", "1981", "Along with his student E. Allen Emerson, invented and developed #{model checking}, a system for mathematically verifying that a given model meets a formal specification. This would become important for the verification of hardware systems.", "Model Checking, Hardware", "3", "https://en.wikipedia.org/wiki/Model_checking"
"aEdgar F. Codd", "1970", "Published a paper entitled 'A Relational Model of Data for Large Shared Data Banks', which laid the theoretical foundations for relational databases and query languages such as SQL.", "Database, Relational Database", "4", "https://en.wikipedia.org/wiki/Edgar_F._Codd#Work"
"aDouglas Engelbart", "1965", "Along with his team, invented the concepts for bitmapped screen displays.", "Bitmap, Hardware", "4", "https://en.wikipedia.org/wiki/Raster_graphics"
"aDouglas Engelbart", "1965", "Along with his team, invented early systems implementing the foundations for #{hypertext} - interlinked systems of documents.", "Hypertext, Internet", "4", "https://en.wikipedia.org/wiki/Hypertext#History"
"aDouglas Engelbart", "1967", "Along with Bill English, invented the #{computer mouse|Mouse} in the form of a wooden shell atop two metal wheels. It was described as an 'X-Y position indicator for a display system'.", "Mouse, Hardware", "5", "https://en.wikipedia.org/wiki/Computer_mouse"
"aDouglas Engelbart", "1968", "Presented and demonstrated original inventions including the #{Computer Mouse|Mouse}, #{Computer Networks|Network}, #{Hypertext} and several others.", "Demonstration", "2", "https://en.wikipedia.org/wiki/The_Mother_of_All_Demos"
"aE. Allen Emerson", "1981", "Along with Edmund M. Clarke, invented and developed #{model checking}, a system for mathematically verifying that a given model meets a formal specification. This would become important for the verification of hardware systems.", "Model Checking, Hardware", "3", "https://en.wikipedia.org/wiki/Model_checking"
"aStephen Cook", "1971", "Published the seminal paper 'The Complexity of Theorem Proving Procedures', which introduced the notions of Cook Reduction and #{NP-Completeness|NP-Complete}. NP-Completeness refers to problems for which no efficient algorithm exists. The paper also famously posed the #{P vs. NP} question.", "NP-Complete, Computation, Complexity, P vs. NP", "4", "https://en.wikipedia.org/wiki/NP-complete"
"aaMuhammad ibn Musa al-Khwarizmi", "800", "The term '#{algorithm}' is derived from the algorism, the technique of performing arithmetic with Hindu-Arabic numerals developed by al-Khwarizmi. Both '#{algorithm}' and 'algorism' are derived from the Latinized forms of al-Khwarizmi's name, Algoritmi and Algorismi, respectively.", "Mathematics, Algorithm", "5", "https://en.wikipedia.org/wiki/Muhammad_ibn_Musa_al-Khwarizmi#Arithmetic"
"aaJohn Vincent Atanasoff", "1939", "The #{Atanasoff-Berry computer} (ABC) was the first automatic #{electronic digital computer|electronic computer}. The ABC's priority is debated among historians of computer technology, because it was not programmable, nor Turing-complete.", "Electronic Computer, Computer", "4", "https://en.wikipedia.org/wiki/Atanasoff%E2%80%93Berry_computer"
"aaCharles Babbage", "1825", "Invented the #{Difference Engine}, an automatic mechanical calculator designed to tabulate polynomial functions. It was not programmable, nor Turing-complete.", "Difference Engine, Mechanical Computer, Computer", "5", "https://en.wikipedia.org/wiki/Difference_engine"
"aaCharles Babbage", "1837", "Designed the #{Analytical Engine}. The first, general-purpose, programmable computer. It was 100 years ahead of it's time.", "Analytical Engine, Mechanical Computer, Computer, Punch Cards", "5", "https://en.wikipedia.org/wiki/Analytical_engine"
"aaJohn Backus", "1953", "Created #{Speedcoding}, also known As #{Speedcode}, the first high level #{programming language} built for an #{IBM} computer.", "Speedcoding, Speedcode, Programming Language, IBM", "4", "https://en.wikipedia.org/wiki/Speedcoding"
"aaJohn Backus", "1954", "Lead a team who developed #{FORTRAN} for the #{IBM} 704 computer. #{FORTRAN} was one of the first high-level #{programming languages|programming language} that saw wide-spread use.", "FORTRAN, Programming Language, IBM", "5", "https://en.wikipedia.org/wiki/Fortran"
"aaJohn Backus", "1959", "Served on the design committee for #{ALGOL} 60, an incredibly influential #{programming language} which introduced lexical scoping, code blocks and many syntactical elements common today (if, then, while, for, do, begin, end, etc).", "ALGOL, Programming Language", "4", "https://en.wikipedia.org/wiki/ALGOL_60"
"aaJohn Backus", "1960", "Invented the Backus-Naur Form (previously known as Backus Normal Form), a notation for context-free grammars which is used to describe the syntax of #{programming languages|programming language}.", "BNF, Backus-Naur Form, Backus Normal Form, Programming Language", "4", "https://en.wikipedia.org/wiki/Backus%E2%80%93Naur_Form"
"aaJohn Backus", "1977", "Created #{FP}, a function-level #{programming language}. #{FP} helped spark an interest in the #{functional programming} paradigm.", "FP, Functional Programming, Function-Level Programming, Programming Language", "2", "https://en.wikipedia.org/wiki/FP_(programming_language)"
"aaJohn Backus", "1989", "Created #{FL}, a #{function-level programming} language that is considered a successor to #{FP}.", "FL, Function-Level Programming, Functional Programming, Programming Language", "2", "https://en.wikipedia.org/wiki/FL_(programming_language)"
"aaJean Bartik", "1946", "Became one of the six original programmers on #{ENIAC}.", "ENIAC, Programming", "3", "https://en.wikipedia.org/wiki/ENIAC#Programming"
"aaJean Bartik", "1948", "Was part of a team charged with developing the concept of the 'stored program #{computer}'.", "Computer", "3", "https://en.wikipedia.org/wiki/Stored-program_computer"
"aaJean Bartik", "1949", "Helped develop the #{BINAC} AND #{UNIVAC} I computers.", "BINAC, UNIVAC, Programming, Computer", "3", "https://en.wikipedia.org/wiki/Jean_Bartik#Career_as_a_computer_programmer"
"aaTim Berners-Lee", "1980", "Invented ENQUIRE, a system for sharing documents over the #{Internet}.", "Internet, WWW", "4", "https://en.wikipedia.org/wiki/ENQUIRE"
"aaTim Berners-Lee", "1989", "Invented WorldWideWeb, the first #{Web Browser|WWW}.", "Internet, WWW", "5", "https://en.wikipedia.org/wiki/WorldWideWeb"
"aaTim Berners-Lee", "1990", "Along with Ari Luotonen and Henrik Frystyk, invented CERN HTTPd, the first #{Web Server|HTTP}. It ran as a daemon and was written in C.", "Internet, WWW, HTTP", "5", "https://en.wikipedia.org/wiki/CERN_httpd"
"aaTim Berners-Lee", "1990", "Specified #{HTML}, an SGML-based markup language for describing #{hypertext} documents. Originally, #{HTML} only included 18 tags.", "Internet, Hypertext, WWW, HTML", "5", "https://en.wikipedia.org/wiki/HTML"
"aaTim Berners-Lee", "1991", "Formally released the Hypertext Transport Protocol (#{HTTP}) version 0.9 along with a team of Engineers. #{HTTP} v0.9 was only capable of GET requests.", "Internet, WWW, HTTP", "5", "https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol"
"aaGeorge Boole", "1847", "Invented Symbolic #{Logic}, the basis for Boolean Algebra, a mathematical system for describing logical relations. It would become the basis for electronic #{circuit design}.", "Mathematics, Logic, Circuit Design", "5", "https://en.wikipedia.org/wiki/Boolean_algebra"
"aaGeorge Boole", "1854", "Published 'The Laws of Thought', which further laid-out #{algebraic logic|Logic}.", "Mathematics, Logic", "4", "https://en.wikipedia.org/wiki/The_Laws_of_Thought"
"aaPer Brinch Hansen", "1969", "Primary developer of the RC 4000 Multiprogramming System (also known as Monitor), the first #{operating system} to implement a kernel. Although not particularly successful, it was hugely influential in the design of future #{operating systems}.", "Operating System, RC 4000", "3", "https://en.wikipedia.org/wiki/RC_4000_multiprogramming_system"
"aaPer Brinch Hansen", "1973", "Published 'Operating System Principles', the first comprehensive textbok on #{operating systems}. It was hailed for it's simplicity and clarity in treatment of a complex subject.", "Operating System, Book", "3", "https://en.wikipedia.org/wiki/Per_Brinch_Hansen#Operating_Systems"
"aaPer Brinch Hansen", "1973", "Along with Tony Hoare, invented #{Monitors}, a construct for allowing #{threads|Concurrency} to have mutual exclusion and the ability to wait/block for conditions to become true.", "Concurrency, Monitors", "3", "https://en.wikipedia.org/wiki/Per_Brinch_Hansen#Operating_Systems"
"aaPer Brinch Hansen", "1975", "Invented Concurrent #{Pascal}, the first #{programming language} to implement #{monitors}.", "Concurrency, Programming Language, Pascal, Monitors", "3", "https://en.wikipedia.org/wiki/Concurrent_Pascal"
"aaPer Brinch Hansen", "1977", "Published 'The Architecture of Concurrent Programs', the first comprehensive textbok on #{concurrent programming|Concurrency}.", "Concurrency, Book", "2", "https://en.wikipedia.org/wiki/Per_Brinch_Hansen#Operating_Systems"
"aaPer Brinch Hansen", "1978", "Published a paper on #{distributed proceses|Distributed Computing}, which introduced concepts which are now known as #{remote procedure calling|RPC} (RPC). RPC is a technique for executing code in a remote address space (such as another computer in a network).", "Distributed Computing, RPC, Paper", "3", "https://en.wikipedia.org/wiki/Remote_procedure_call"
"aaNikolay Brusentsov", "1958", "Invented #{Setun}, a balanced #{ternary} #{computer}. Setun used three fundamental values (-1, 0, 1) instead of the more common two values (0, 1) in #{binary} computers.", "Computer, Ternary, Setun", "3", "https://en.wikipedia.org/wiki/Setun"
"aaNikolay Brusentsov", "1970", "Invented #{Setun} 70, whose #{CPU} design presented many concepts that would later be incorporated (perhaps independently) into the #{Reduced Instruction-Set Computing|RISC} (RISC) architecture.", "Computer, Setun, RISC, CPU", "3", "http://en.uacomputing.com/persons/brusentsov/"
"aaVannevar Bush", "1945", "Published 'As We May Think', an article which introduced the #{Memex} - a theoretical electronic device that would allow users to store and retrieve books, records and communications. The design involved linking documents via association, which would come to be very influential in the creation of #{hypertext} systems.", "Computer, Memex, Hypertext", "4", "https://en.wikipedia.org/wiki/Memex"
"aaDavid Caminer", "1951", "Helped design the #{Lyons Electonic Office} (LEO) computer, which was the first business #{computer}. For his effort, David Caminer is often called the world's first Software Engineer.", "Computer, LEO", "3", "https://en.wikipedia.org/wiki/LEO_%28computer%29"
"aaVint Cerf", "1973", "Conducted research around the notion of packet-switching #{network|Networking} protocols.", "Networking, Internet", "3", "https://en.wikipedia.org/wiki/Vint_Cerf"
"aaVint Cerf", "1975", "Co-designed the #{TCP/IP} #{network|Networking} protocol suite for the US Department of Defense.", "TCP/IP, Networking, Internet", "4", "https://en.wikipedia.org/wiki/Internet_protocol_suite"
"aaVint Cerf", "1984", "Lead engineer on MCI Mail, the first commercial #{email} service to be connected to the #{Internet}", "Email, Networking, Internet", "4", "https://en.wikipedia.org/wiki/MCI_Mail"
"aaVint Cerf", "1992", "Co-founded the Internet Society to provide guidance for standards and education related to the #{Internet}.", "Internet", "2", "https://en.wikipedia.org/wiki/Internet_Society"
"aaNoam Chomsky", "1956", "Invented the Chomsky Hierarchy, which is a set of classes of formal grammars that have become especially important in the creation of #{compilers} and #{interpreters} in #{computer programming|Programming Language}.", "Compiler, Programming Language, Formal Grammar", "4", "https://en.wikipedia.org/wiki/Chomsky_hierarchy"
"aaAlonzo Church", "1936", "Invented #{lambda calculus}, a formal mathematical system for presenting #{computation} based purely on function abstraction and application. Lambda calculus proved to be a universal model of #{computation} that would be incredibly important in the development of #{programming languages}.", "Lambda Calculus, Computation, Programming Language", "5", "https://en.wikipedia.org/wiki/Lambda_calculus"
"aaAlonzo Church", "1935", "Provided a negative answer to the #{Entscheidungsproblem}, which asks if there is an algorithm to determine if an axiom is true in all models of a theory. This would have great impact on the theory of #{computation} in later years.", "Computation, Entscheidungsproblem", "4", "https://en.wikipedia.org/wiki/Entscheidungsproblem"
"aaAlonzo Church", "1936", "Co-articulated what has become known as the #{Church-Turing Thesis}, which asserts that for any operation carried out by an algorithm there exists an equivalent #{lambda expression|Lambda Calculus} (or #{Turing Machine}). This would have great impact on the theory of #{computation} in later years.", "Computation, Church-Turing Thesis", "5", "https://en.wikipedia.org/wiki/Church%E2%80%93Turing_thesis"
"aaWesley A. Clark", "1955", "Created the logic systems for the #{TX-0} (Transistorized Experimental computer zero) #{computer}, an early fully-transistorized digital computer that was used at MIT.", "Computer, TX-0, Computer", "3", "https://en.wikipedia.org/wiki/TX-0"
"aaWesley A. Clark", "1958", "Chief Architect for the #{TX-2} (Transistorized Experimental computer two) #{computer}, an early fully-transistorized digital computer that was important in the advancement of the field of #{artificial intelligence}.", "Computer, TX-2, Computer, Artificial Intelligence", "3", "https://en.wikipedia.org/wiki/TX-2"
"aaWesley A. Clark", "1962", "Co-designed #{LINC}, the world's first #{minicomputer} and forerunner to the now ubiquitous personal #{computer}. #{LINC} would go on to inspire many ideas for the wildly successful #{PDP-8} minicomputer.", "Computer, Minicomputer, LINC, Computer", "4", "https://en.wikipedia.org/wiki/LINC"
"aaEdmund M. Clarke", "1979", "Published a paper proving that for certain #{programming language} constructs it is impossible to obtain good #{Hoare Axiom Systems|Hoare Logic}. The paper demonstrated that #{recursive|Recursion} procedures with parameters in languages with a static scope for identifiers and #{coroutines} in languages that allow parameterless #{recursive|Recursion} procedures cannot be proven correct via the #{Hoare Logic} formal system.", "Programming Language, Hoare Logic", "2", "http://www.cs.cmu.edu/~emc/papers/Papers%20In%20Refereed%20Journals/79_impossible_hoareaxiom.pdf"
"aaEdmund M. Clarke", "1981", "Along with his student E. Allen Emerson, invented and developed #{model checking}, a system for mathematically verifying that a given model meets a formal specification. This would become important for the verification of hardware systems.", "Model Checking, Hardware", "3", "https://en.wikipedia.org/wiki/Model_checking"
"aaEdgar F. Codd", "1970", "Published a paper entitled 'A Relational Model of Data for Large Shared Data Banks', which laid the theoretical foundations for relational databases and query languages such as SQL.", "Database, Relational Database", "4", "https://en.wikipedia.org/wiki/Edgar_F._Codd#Work"
"aaDouglas Engelbart", "1965", "Along with his team, invented the concepts for bitmapped screen displays.", "Bitmap, Hardware", "4", "https://en.wikipedia.org/wiki/Raster_graphics"
"aaDouglas Engelbart", "1965", "Along with his team, invented early systems implementing the foundations for #{hypertext} - interlinked systems of documents.", "Hypertext, Internet", "4", "https://en.wikipedia.org/wiki/Hypertext#History"
"aaDouglas Engelbart", "1967", "Along with Bill English, invented the #{computer mouse|Mouse} in the form of a wooden shell atop two metal wheels. It was described as an 'X-Y position indicator for a display system'.", "Mouse, Hardware", "5", "https://en.wikipedia.org/wiki/Computer_mouse"
"aaDouglas Engelbart", "1968", "Presented and demonstrated original inventions including the #{Computer Mouse|Mouse}, #{Computer Networks|Network}, #{Hypertext} and several others.", "Demonstration", "2", "https://en.wikipedia.org/wiki/The_Mother_of_All_Demos"
"aaE. Allen Emerson", "1981", "Along with Edmund M. Clarke, invented and developed #{model checking}, a system for mathematically verifying that a given model meets a formal specification. This would become important for the verification of hardware systems.", "Model Checking, Hardware", "3", "https://en.wikipedia.org/wiki/Model_checking"
"aaStephen Cook", "1971", "Published the seminal paper 'The Complexity of Theorem Proving Procedures', which introduced the notions of Cook Reduction and #{NP-Completeness|NP-Complete}. NP-Completeness refers to problems for which no efficient algorithm exists. The paper also famously posed the #{P vs. NP} question.", "NP-Complete, Computation, Complexity, P vs. NP", "4", "https://en.wikipedia.org/wiki/NP-complete"
"aaaMuhammad ibn Musa al-Khwarizmi", "800", "The term '#{algorithm}' is derived from the algorism, the technique of performing arithmetic with Hindu-Arabic numerals developed by al-Khwarizmi. Both '#{algorithm}' and 'algorism' are derived from the Latinized forms of al-Khwarizmi's name, Algoritmi and Algorismi, respectively.", "Mathematics, Algorithm", "5", "https://en.wikipedia.org/wiki/Muhammad_ibn_Musa_al-Khwarizmi#Arithmetic"
"aaaJohn Vincent Atanasoff", "1939", "The #{Atanasoff-Berry computer} (ABC) was the first automatic #{electronic digital computer|electronic computer}. The ABC's priority is debated among historians of computer technology, because it was not programmable, nor Turing-complete.", "Electronic Computer, Computer", "4", "https://en.wikipedia.org/wiki/Atanasoff%E2%80%93Berry_computer"
"aaaCharles Babbage", "1825", "Invented the #{Difference Engine}, an automatic mechanical calculator designed to tabulate polynomial functions. It was not programmable, nor Turing-complete.", "Difference Engine, Mechanical Computer, Computer", "5", "https://en.wikipedia.org/wiki/Difference_engine"
"aaaCharles Babbage", "1837", "Designed the #{Analytical Engine}. The first, general-purpose, programmable computer. It was 100 years ahead of it's time.", "Analytical Engine, Mechanical Computer, Computer, Punch Cards", "5", "https://en.wikipedia.org/wiki/Analytical_engine"
"aaaJohn Backus", "1953", "Created #{Speedcoding}, also known As #{Speedcode}, the first high level #{programming language} built for an #{IBM} computer.", "Speedcoding, Speedcode, Programming Language, IBM", "4", "https://en.wikipedia.org/wiki/Speedcoding"
"aaaJohn Backus", "1954", "Lead a team who developed #{FORTRAN} for the #{IBM} 704 computer. #{FORTRAN} was one of the first high-level #{programming languages|programming language} that saw wide-spread use.", "FORTRAN, Programming Language, IBM", "5", "https://en.wikipedia.org/wiki/Fortran"
"aaaJohn Backus", "1959", "Served on the design committee for #{ALGOL} 60, an incredibly influential #{programming language} which introduced lexical scoping, code blocks and many syntactical elements common today (if, then, while, for, do, begin, end, etc).", "ALGOL, Programming Language", "4", "https://en.wikipedia.org/wiki/ALGOL_60"
"aaaJohn Backus", "1960", "Invented the Backus-Naur Form (previously known as Backus Normal Form), a notation for context-free grammars which is used to describe the syntax of #{programming languages|programming language}.", "BNF, Backus-Naur Form, Backus Normal Form, Programming Language", "4", "https://en.wikipedia.org/wiki/Backus%E2%80%93Naur_Form"
"aaaJohn Backus", "1977", "Created #{FP}, a function-level #{programming language}. #{FP} helped spark an interest in the #{functional programming} paradigm.", "FP, Functional Programming, Function-Level Programming, Programming Language", "2", "https://en.wikipedia.org/wiki/FP_(programming_language)"
"aaaJohn Backus", "1989", "Created #{FL}, a #{function-level programming} language that is considered a successor to #{FP}.", "FL, Function-Level Programming, Functional Programming, Programming Language", "2", "https://en.wikipedia.org/wiki/FL_(programming_language)"
"aaaJean Bartik", "1946", "Became one of the six original programmers on #{ENIAC}.", "ENIAC, Programming", "3", "https://en.wikipedia.org/wiki/ENIAC#Programming"
"aaaJean Bartik", "1948", "Was part of a team charged with developing the concept of the 'stored program #{computer}'.", "Computer", "3", "https://en.wikipedia.org/wiki/Stored-program_computer"
"aaaJean Bartik", "1949", "Helped develop the #{BINAC} AND #{UNIVAC} I computers.", "BINAC, UNIVAC, Programming, Computer", "3", "https://en.wikipedia.org/wiki/Jean_Bartik#Career_as_a_computer_programmer"
"aaaTim Berners-Lee", "1980", "Invented ENQUIRE, a system for sharing documents over the #{Internet}.", "Internet, WWW", "4", "https://en.wikipedia.org/wiki/ENQUIRE"
"aaaTim Berners-Lee", "1989", "Invented WorldWideWeb, the first #{Web Browser|WWW}.", "Internet, WWW", "5", "https://en.wikipedia.org/wiki/WorldWideWeb"
"aaaTim Berners-Lee", "1990", "Along with Ari Luotonen and Henrik Frystyk, invented CERN HTTPd, the first #{Web Server|HTTP}. It ran as a daemon and was written in C.", "Internet, WWW, HTTP", "5", "https://en.wikipedia.org/wiki/CERN_httpd"
"aaaTim Berners-Lee", "1990", "Specified #{HTML}, an SGML-based markup language for describing #{hypertext} documents. Originally, #{HTML} only included 18 tags.", "Internet, Hypertext, WWW, HTML", "5", "https://en.wikipedia.org/wiki/HTML"
"aaaTim Berners-Lee", "1991", "Formally released the Hypertext Transport Protocol (#{HTTP}) version 0.9 along with a team of Engineers. #{HTTP} v0.9 was only capable of GET requests.", "Internet, WWW, HTTP", "5", "https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol"
"aaaGeorge Boole", "1847", "Invented Symbolic #{Logic}, the basis for Boolean Algebra, a mathematical system for describing logical relations. It would become the basis for electronic #{circuit design}.", "Mathematics, Logic, Circuit Design", "5", "https://en.wikipedia.org/wiki/Boolean_algebra"
"aaaGeorge Boole", "1854", "Published 'The Laws of Thought', which further laid-out #{algebraic logic|Logic}.", "Mathematics, Logic", "4", "https://en.wikipedia.org/wiki/The_Laws_of_Thought"
"aaaPer Brinch Hansen", "1969", "Primary developer of the RC 4000 Multiprogramming System (also known as Monitor), the first #{operating system} to implement a kernel. Although not particularly successful, it was hugely influential in the design of future #{operating systems}.", "Operating System, RC 4000", "3", "https://en.wikipedia.org/wiki/RC_4000_multiprogramming_system"
"aaaPer Brinch Hansen", "1973", "Published 'Operating System Principles', the first comprehensive textbok on #{operating systems}. It was hailed for it's simplicity and clarity in treatment of a complex subject.", "Operating System, Book", "3", "https://en.wikipedia.org/wiki/Per_Brinch_Hansen#Operating_Systems"
"aaaPer Brinch Hansen", "1973", "Along with Tony Hoare, invented #{Monitors}, a construct for allowing #{threads|Concurrency} to have mutual exclusion and the ability to wait/block for conditions to become true.", "Concurrency, Monitors", "3", "https://en.wikipedia.org/wiki/Per_Brinch_Hansen#Operating_Systems"
"aaaPer Brinch Hansen", "1975", "Invented Concurrent #{Pascal}, the first #{programming language} to implement #{monitors}.", "Concurrency, Programming Language, Pascal, Monitors", "3", "https://en.wikipedia.org/wiki/Concurrent_Pascal"
"aaaPer Brinch Hansen", "1977", "Published 'The Architecture of Concurrent Programs', the first comprehensive textbok on #{concurrent programming|Concurrency}.", "Concurrency, Book", "2", "https://en.wikipedia.org/wiki/Per_Brinch_Hansen#Operating_Systems"
"aaaPer Brinch Hansen", "1978", "Published a paper on #{distributed proceses|Distributed Computing}, which introduced concepts which are now known as #{remote procedure calling|RPC} (RPC). RPC is a technique for executing code in a remote address space (such as another computer in a network).", "Distributed Computing, RPC, Paper", "3", "https://en.wikipedia.org/wiki/Remote_procedure_call"
"aaaNikolay Brusentsov", "1958", "Invented #{Setun}, a balanced #{ternary} #{computer}. Setun used three fundamental values (-1, 0, 1) instead of the more common two values (0, 1) in #{binary} computers.", "Computer, Ternary, Setun", "3", "https://en.wikipedia.org/wiki/Setun"
"aaaNikolay Brusentsov", "1970", "Invented #{Setun} 70, whose #{CPU} design presented many concepts that would later be incorporated (perhaps independently) into the #{Reduced Instruction-Set Computing|RISC} (RISC) architecture.", "Computer, Setun, RISC, CPU", "3", "http://en.uacomputing.com/persons/brusentsov/"
"aaaVannevar Bush", "1945", "Published 'As We May Think', an article which introduced the #{Memex} - a theoretical electronic device that would allow users to store and retrieve books, records and communications. The design involved linking documents via association, which would come to be very influential in the creation of #{hypertext} systems.", "Computer, Memex, Hypertext", "4", "https://en.wikipedia.org/wiki/Memex"
"aaaDavid Caminer", "1951", "Helped design the #{Lyons Electonic Office} (LEO) computer, which was the first business #{computer}. For his effort, David Caminer is often called the world's first Software Engineer.", "Computer, LEO", "3", "https://en.wikipedia.org/wiki/LEO_%28computer%29"
"aaaVint Cerf", "1973", "Conducted research around the notion of packet-switching #{network|Networking} protocols.", "Networking, Internet", "3", "https://en.wikipedia.org/wiki/Vint_Cerf"
"aaaVint Cerf", "1975", "Co-designed the #{TCP/IP} #{network|Networking} protocol suite for the US Department of Defense.", "TCP/IP, Networking, Internet", "4", "https://en.wikipedia.org/wiki/Internet_protocol_suite"
"aaaVint Cerf", "1984", "Lead engineer on MCI Mail, the first commercial #{email} service to be connected to the #{Internet}", "Email, Networking, Internet", "4", "https://en.wikipedia.org/wiki/MCI_Mail"
"aaaVint Cerf", "1992", "Co-founded the Internet Society to provide guidance for standards and education related to the #{Internet}.", "Internet", "2", "https://en.wikipedia.org/wiki/Internet_Society"
"aaaNoam Chomsky", "1956", "Invented the Chomsky Hierarchy, which is a set of classes of formal grammars that have become especially important in the creation of #{compilers} and #{interpreters} in #{computer programming|Programming Language}.", "Compiler, Programming Language, Formal Grammar", "4", "https://en.wikipedia.org/wiki/Chomsky_hierarchy"
"aaaAlonzo Church", "1936", "Invented #{lambda calculus}, a formal mathematical system for presenting #{computation} based purely on function abstraction and application. Lambda calculus proved to be a universal model of #{computation} that would be incredibly important in the development of #{programming languages}.", "Lambda Calculus, Computation, Programming Language", "5", "https://en.wikipedia.org/wiki/Lambda_calculus"
"aaaAlonzo Church", "1935", "Provided a negative answer to the #{Entscheidungsproblem}, which asks if there is an algorithm to determine if an axiom is true in all models of a theory. This would have great impact on the theory of #{computation} in later years.", "Computation, Entscheidungsproblem", "4", "https://en.wikipedia.org/wiki/Entscheidungsproblem"
"aaaAlonzo Church", "1936", "Co-articulated what has become known as the #{Church-Turing Thesis}, which asserts that for any operation carried out by an algorithm there exists an equivalent #{lambda expression|Lambda Calculus} (or #{Turing Machine}). This would have great impact on the theory of #{computation} in later years.", "Computation, Church-Turing Thesis", "5", "https://en.wikipedia.org/wiki/Church%E2%80%93Turing_thesis"
"aaaWesley A. Clark", "1955", "Created the logic systems for the #{TX-0} (Transistorized Experimental computer zero) #{computer}, an early fully-transistorized digital computer that was used at MIT.", "Computer, TX-0, Computer", "3", "https://en.wikipedia.org/wiki/TX-0"
"aaaWesley A. Clark", "1958", "Chief Architect for the #{TX-2} (Transistorized Experimental computer two) #{computer}, an early fully-transistorized digital computer that was important in the advancement of the field of #{artificial intelligence}.", "Computer, TX-2, Computer, Artificial Intelligence", "3", "https://en.wikipedia.org/wiki/TX-2"
"aaaWesley A. Clark", "1962", "Co-designed #{LINC}, the world's first #{minicomputer} and forerunner to the now ubiquitous personal #{computer}. #{LINC} would go on to inspire many ideas for the wildly successful #{PDP-8} minicomputer.", "Computer, Minicomputer, LINC, Computer", "4", "https://en.wikipedia.org/wiki/LINC"
"aaaEdmund M. Clarke", "1979", "Published a paper proving that for certain #{programming language} constructs it is impossible to obtain good #{Hoare Axiom Systems|Hoare Logic}. The paper demonstrated that #{recursive|Recursion} procedures with parameters in languages with a static scope for identifiers and #{coroutines} in languages that allow parameterless #{recursive|Recursion} procedures cannot be proven correct via the #{Hoare Logic} formal system.", "Programming Language, Hoare Logic", "2", "http://www.cs.cmu.edu/~emc/papers/Papers%20In%20Refereed%20Journals/79_impossible_hoareaxiom.pdf"
"aaaEdmund M. Clarke", "1981", "Along with his student E. Allen Emerson, invented and developed #{model checking}, a system for mathematically verifying that a given model meets a formal specification. This would become important for the verification of hardware systems.", "Model Checking, Hardware", "3", "https://en.wikipedia.org/wiki/Model_checking"
"aaaEdgar F. Codd", "1970", "Published a paper entitled 'A Relational Model of Data for Large Shared Data Banks', which laid the theoretical foundations for relational databases and query languages such as SQL.", "Database, Relational Database", "4", "https://en.wikipedia.org/wiki/Edgar_F._Codd#Work"
"aaaDouglas Engelbart", "1965", "Along with his team, invented the concepts for bitmapped screen displays.", "Bitmap, Hardware", "4", "https://en.wikipedia.org/wiki/Raster_graphics"
"aaaDouglas Engelbart", "1965", "Along with his team, invented early systems implementing the foundations for #{hypertext} - interlinked systems of documents.", "Hypertext, Internet", "4", "https://en.wikipedia.org/wiki/Hypertext#History"
"aaaDouglas Engelbart", "1967", "Along with Bill English, invented the #{computer mouse|Mouse} in the form of a wooden shell atop two metal wheels. It was described as an 'X-Y position indicator for a display system'.", "Mouse, Hardware", "5", "https://en.wikipedia.org/wiki/Computer_mouse"
"aaaDouglas Engelbart", "1968", "Presented and demonstrated original inventions including the #{Computer Mouse|Mouse}, #{Computer Networks|Network}, #{Hypertext} and several others.", "Demonstration", "2", "https://en.wikipedia.org/wiki/The_Mother_of_All_Demos"
"aaaE. Allen Emerson", "1981", "Along with Edmund M. Clarke, invented and developed #{model checking}, a system for mathematically verifying that a given model meets a formal specification. This would become important for the verification of hardware systems.", "Model Checking, Hardware", "3", "https://en.wikipedia.org/wiki/Model_checking"
"aaaStephen Cook", "1971", "Published the seminal paper 'The Complexity of Theorem Proving Procedures', which introduced the notions of Cook Reduction and #{NP-Completeness|NP-Complete}. NP-Completeness refers to problems for which no efficient algorithm exists. The paper also famously posed the #{P vs. NP} question.", "NP-Complete, Computation, Complexity, P vs. NP", "4", "https://en.wikipedia.org/wiki/NP-complete"
"zMuhammad ibn Musa al-Khwarizmi", "800", "The term '#{algorithm}' is derived from the algorism, the technique of performing arithmetic with Hindu-Arabic numerals developed by al-Khwarizmi. Both '#{algorithm}' and 'algorism' are derived from the Latinized forms of al-Khwarizmi's name, Algoritmi and Algorismi, respectively.", "Mathematics, Algorithm", "5", "https://en.wikipedia.org/wiki/Muhammad_ibn_Musa_al-Khwarizmi#Arithmetic"
"zJohn Vincent Atanasoff", "1939", "The #{Atanasoff-Berry computer} (ABC) was the first automatic #{electronic digital computer|electronic computer}. The ABC's priority is debated among historians of computer technology, because it was not programmable, nor Turing-complete.", "Electronic Computer, Computer", "4", "https://en.wikipedia.org/wiki/Atanasoff%E2%80%93Berry_computer"
"zCharles Babbage", "1825", "Invented the #{Difference Engine}, an automatic mechanical calculator designed to tabulate polynomial functions. It was not programmable, nor Turing-complete.", "Difference Engine, Mechanical Computer, Computer", "5", "https://en.wikipedia.org/wiki/Difference_engine"
"zCharles Babbage", "1837", "Designed the #{Analytical Engine}. The first, general-purpose, programmable computer. It was 100 years ahead of it's time.", "Analytical Engine, Mechanical Computer, Computer, Punch Cards", "5", "https://en.wikipedia.org/wiki/Analytical_engine"
"zJohn Backus", "1953", "Created #{Speedcoding}, also known As #{Speedcode}, the first high level #{programming language} built for an #{IBM} computer.", "Speedcoding, Speedcode, Programming Language, IBM", "4", "https://en.wikipedia.org/wiki/Speedcoding"
"zJohn Backus", "1954", "Lead a team who developed #{FORTRAN} for the #{IBM} 704 computer. #{FORTRAN} was one of the first high-level #{programming languages|programming language} that saw wide-spread use.", "FORTRAN, Programming Language, IBM", "5", "https://en.wikipedia.org/wiki/Fortran"
"zJohn Backus", "1959", "Served on the design committee for #{ALGOL} 60, an incredibly influential #{programming language} which introduced lexical scoping, code blocks and many syntactical elements common today (if, then, while, for, do, begin, end, etc).", "ALGOL, Programming Language", "4", "https://en.wikipedia.org/wiki/ALGOL_60"
"zJohn Backus", "1960", "Invented the Backus-Naur Form (previously known as Backus Normal Form), a notation for context-free grammars which is used to describe the syntax of #{programming languages|programming language}.", "BNF, Backus-Naur Form, Backus Normal Form, Programming Language", "4", "https://en.wikipedia.org/wiki/Backus%E2%80%93Naur_Form"
"zJohn Backus", "1977", "Created #{FP}, a function-level #{programming language}. #{FP} helped spark an interest in the #{functional programming} paradigm.", "FP, Functional Programming, Function-Level Programming, Programming Language", "2", "https://en.wikipedia.org/wiki/FP_(programming_language)"
"zJohn Backus", "1989", "Created #{FL}, a #{function-level programming} language that is considered a successor to #{FP}.", "FL, Function-Level Programming, Functional Programming, Programming Language", "2", "https://en.wikipedia.org/wiki/FL_(programming_language)"
"zJean Bartik", "1946", "Became one of the six original programmers on #{ENIAC}.", "ENIAC, Programming", "3", "https://en.wikipedia.org/wiki/ENIAC#Programming"
"zJean Bartik", "1948", "Was part of a team charged with developing the concept of the 'stored program #{computer}'.", "Computer", "3", "https://en.wikipedia.org/wiki/Stored-program_computer"
"zJean Bartik", "1949", "Helped develop the #{BINAC} AND #{UNIVAC} I computers.", "BINAC, UNIVAC, Programming, Computer", "3", "https://en.wikipedia.org/wiki/Jean_Bartik#Career_as_a_computer_programmer"
"zTim Berners-Lee", "1980", "Invented ENQUIRE, a system for sharing documents over the #{Internet}.", "Internet, WWW", "4", "https://en.wikipedia.org/wiki/ENQUIRE"
"zTim Berners-Lee", "1989", "Invented WorldWideWeb, the first #{Web Browser|WWW}.", "Internet, WWW", "5", "https://en.wikipedia.org/wiki/WorldWideWeb"
"zTim Berners-Lee", "1990", "Along with Ari Luotonen and Henrik Frystyk, invented CERN HTTPd, the first #{Web Server|HTTP}. It ran as a daemon and was written in C.", "Internet, WWW, HTTP", "5", "https://en.wikipedia.org/wiki/CERN_httpd"
"zTim Berners-Lee", "1990", "Specified #{HTML}, an SGML-based markup language for describing #{hypertext} documents. Originally, #{HTML} only included 18 tags.", "Internet, Hypertext, WWW, HTML", "5", "https://en.wikipedia.org/wiki/HTML"
"zTim Berners-Lee", "1991", "Formally released the Hypertext Transport Protocol (#{HTTP}) version 0.9 along with a team of Engineers. #{HTTP} v0.9 was only capable of GET requests.", "Internet, WWW, HTTP", "5", "https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol"
"zGeorge Boole", "1847", "Invented Symbolic #{Logic}, the basis for Boolean Algebra, a mathematical system for describing logical relations. It would become the basis for electronic #{circuit design}.", "Mathematics, Logic, Circuit Design", "5", "https://en.wikipedia.org/wiki/Boolean_algebra"
"zGeorge Boole", "1854", "Published 'The Laws of Thought', which further laid-out #{algebraic logic|Logic}.", "Mathematics, Logic", "4", "https://en.wikipedia.org/wiki/The_Laws_of_Thought"
"zPer Brinch Hansen", "1969", "Primary developer of the RC 4000 Multiprogramming System (also known as Monitor), the first #{operating system} to implement a kernel. Although not particularly successful, it was hugely influential in the design of future #{operating systems}.", "Operating System, RC 4000", "3", "https://en.wikipedia.org/wiki/RC_4000_multiprogramming_system"
"zPer Brinch Hansen", "1973", "Published 'Operating System Principles', the first comprehensive textbok on #{operating systems}. It was hailed for it's simplicity and clarity in treatment of a complex subject.", "Operating System, Book", "3", "https://en.wikipedia.org/wiki/Per_Brinch_Hansen#Operating_Systems"
"zPer Brinch Hansen", "1973", "Along with Tony Hoare, invented #{Monitors}, a construct for allowing #{threads|Concurrency} to have mutual exclusion and the ability to wait/block for conditions to become true.", "Concurrency, Monitors", "3", "https://en.wikipedia.org/wiki/Per_Brinch_Hansen#Operating_Systems"
"zPer Brinch Hansen", "1975", "Invented Concurrent #{Pascal}, the first #{programming language} to implement #{monitors}.", "Concurrency, Programming Language, Pascal, Monitors", "3", "https://en.wikipedia.org/wiki/Concurrent_Pascal"
"zPer Brinch Hansen", "1977", "Published 'The Architecture of Concurrent Programs', the first comprehensive textbok on #{concurrent programming|Concurrency}.", "Concurrency, Book", "2", "https://en.wikipedia.org/wiki/Per_Brinch_Hansen#Operating_Systems"
"zPer Brinch Hansen", "1978", "Published a paper on #{distributed proceses|Distributed Computing}, which introduced concepts which are now known as #{remote procedure calling|RPC} (RPC). RPC is a technique for executing code in a remote address space (such as another computer in a network).", "Distributed Computing, RPC, Paper", "3", "https://en.wikipedia.org/wiki/Remote_procedure_call"
"zNikolay Brusentsov", "1958", "Invented #{Setun}, a balanced #{ternary} #{computer}. Setun used three fundamental values (-1, 0, 1) instead of the more common two values (0, 1) in #{binary} computers.", "Computer, Ternary, Setun", "3", "https://en.wikipedia.org/wiki/Setun"
"zNikolay Brusentsov", "1970", "Invented #{Setun} 70, whose #{CPU} design presented many concepts that would later be incorporated (perhaps independently) into the #{Reduced Instruction-Set Computing|RISC} (RISC) architecture.", "Computer, Setun, RISC, CPU", "3", "http://en.uacomputing.com/persons/brusentsov/"
"zVannevar Bush", "1945", "Published 'As We May Think', an article which introduced the #{Memex} - a theoretical electronic device that would allow users to store and retrieve books, records and communications. The design involved linking documents via association, which would come to be very influential in the creation of #{hypertext} systems.", "Computer, Memex, Hypertext", "4", "https://en.wikipedia.org/wiki/Memex"
"zDavid Caminer", "1951", "Helped design the #{Lyons Electonic Office} (LEO) computer, which was the first business #{computer}. For his effort, David Caminer is often called the world's first Software Engineer.", "Computer, LEO", "3", "https://en.wikipedia.org/wiki/LEO_%28computer%29"
"zVint Cerf", "1973", "Conducted research around the notion of packet-switching #{network|Networking} protocols.", "Networking, Internet", "3", "https://en.wikipedia.org/wiki/Vint_Cerf"
"zVint Cerf", "1975", "Co-designed the #{TCP/IP} #{network|Networking} protocol suite for the US Department of Defense.", "TCP/IP, Networking, Internet", "4", "https://en.wikipedia.org/wiki/Internet_protocol_suite"
"zVint Cerf", "1984", "Lead engineer on MCI Mail, the first commercial #{email} service to be connected to the #{Internet}", "Email, Networking, Internet", "4", "https://en.wikipedia.org/wiki/MCI_Mail"
"zVint Cerf", "1992", "Co-founded the Internet Society to provide guidance for standards and education related to the #{Internet}.", "Internet", "2", "https://en.wikipedia.org/wiki/Internet_Society"
"zNoam Chomsky", "1956", "Invented the Chomsky Hierarchy, which is a set of classes of formal grammars that have become especially important in the creation of #{compilers} and #{interpreters} in #{computer programming|Programming Language}.", "Compiler, Programming Language, Formal Grammar", "4", "https://en.wikipedia.org/wiki/Chomsky_hierarchy"
"zAlonzo Church", "1936", "Invented #{lambda calculus}, a formal mathematical system for presenting #{computation} based purely on function abstraction and application. Lambda calculus proved to be a universal model of #{computation} that would be incredibly important in the development of #{programming languages}.", "Lambda Calculus, Computation, Programming Language", "5", "https://en.wikipedia.org/wiki/Lambda_calculus"
"zAlonzo Church", "1935", "Provided a negative answer to the #{Entscheidungsproblem}, which asks if there is an algorithm to determine if an axiom is true in all models of a theory. This would have great impact on the theory of #{computation} in later years.", "Computation, Entscheidungsproblem", "4", "https://en.wikipedia.org/wiki/Entscheidungsproblem"
"zAlonzo Church", "1936", "Co-articulated what has become known as the #{Church-Turing Thesis}, which asserts that for any operation carried out by an algorithm there exists an equivalent #{lambda expression|Lambda Calculus} (or #{Turing Machine}). This would have great impact on the theory of #{computation} in later years.", "Computation, Church-Turing Thesis", "5", "https://en.wikipedia.org/wiki/Church%E2%80%93Turing_thesis"
"zWesley A. Clark", "1955", "Created the logic systems for the #{TX-0} (Transistorized Experimental computer zero) #{computer}, an early fully-transistorized digital computer that was used at MIT.", "Computer, TX-0, Computer", "3", "https://en.wikipedia.org/wiki/TX-0"
"zWesley A. Clark", "1958", "Chief Architect for the #{TX-2} (Transistorized Experimental computer two) #{computer}, an early fully-transistorized digital computer that was important in the advancement of the field of #{artificial intelligence}.", "Computer, TX-2, Computer, Artificial Intelligence", "3", "https://en.wikipedia.org/wiki/TX-2"
"zWesley A. Clark", "1962", "Co-designed #{LINC}, the world's first #{minicomputer} and forerunner to the now ubiquitous personal #{computer}. #{LINC} would go on to inspire many ideas for the wildly successful #{PDP-8} minicomputer.", "Computer, Minicomputer, LINC, Computer", "4", "https://en.wikipedia.org/wiki/LINC"
"zEdmund M. Clarke", "1979", "Published a paper proving that for certain #{programming language} constructs it is impossible to obtain good #{Hoare Axiom Systems|Hoare Logic}. The paper demonstrated that #{recursive|Recursion} procedures with parameters in languages with a static scope for identifiers and #{coroutines} in languages that allow parameterless #{recursive|Recursion} procedures cannot be proven correct via the #{Hoare Logic} formal system.", "Programming Language, Hoare Logic", "2", "http://www.cs.cmu.edu/~emc/papers/Papers%20In%20Refereed%20Journals/79_impossible_hoareaxiom.pdf"
"zEdmund M. Clarke", "1981", "Along with his student E. Allen Emerson, invented and developed #{model checking}, a system for mathematically verifying that a given model meets a formal specification. This would become important for the verification of hardware systems.", "Model Checking, Hardware", "3", "https://en.wikipedia.org/wiki/Model_checking"
"zEdgar F. Codd", "1970", "Published a paper entitled 'A Relational Model of Data for Large Shared Data Banks', which laid the theoretical foundations for relational databases and query languages such as SQL.", "Database, Relational Database", "4", "https://en.wikipedia.org/wiki/Edgar_F._Codd#Work"
"zDouglas Engelbart", "1965", "Along with his team, invented the concepts for bitmapped screen displays.", "Bitmap, Hardware", "4", "https://en.wikipedia.org/wiki/Raster_graphics"
"zDouglas Engelbart", "1965", "Along with his team, invented early systems implementing the foundations for #{hypertext} - interlinked systems of documents.", "Hypertext, Internet", "4", "https://en.wikipedia.org/wiki/Hypertext#History"
"zDouglas Engelbart", "1967", "Along with Bill English, invented the #{computer mouse|Mouse} in the form of a wooden shell atop two metal wheels. It was described as an 'X-Y position indicator for a display system'.", "Mouse, Hardware", "5", "https://en.wikipedia.org/wiki/Computer_mouse"
"zDouglas Engelbart", "1968", "Presented and demonstrated original inventions including the #{Computer Mouse|Mouse}, #{Computer Networks|Network}, #{Hypertext} and several others.", "Demonstration", "2", "https://en.wikipedia.org/wiki/The_Mother_of_All_Demos"
"zE. Allen Emerson", "1981", "Along with Edmund M. Clarke, invented and developed #{model checking}, a system for mathematically verifying that a given model meets a formal specification. This would become important for the verification of hardware systems.", "Model Checking, Hardware", "3", "https://en.wikipedia.org/wiki/Model_checking"
"zStephen Cook", "1971", "Published the seminal paper 'The Complexity of Theorem Proving Procedures', which introduced the notions of Cook Reduction and #{NP-Completeness|NP-Complete}. NP-Completeness refers to problems for which no efficient algorithm exists. The paper also famously posed the #{P vs. NP} question.", "NP-Complete, Computation, Complexity, P vs. NP", "4", "https://en.wikipedia.org/wiki/NP-complete"
"zaMuhammad ibn Musa al-Khwarizmi", "800", "The term '#{algorithm}' is derived from the algorism, the technique of performing arithmetic with Hindu-Arabic numerals developed by al-Khwarizmi. Both '#{algorithm}' and 'algorism' are derived from the Latinized forms of al-Khwarizmi's name, Algoritmi and Algorismi, respectively.", "Mathematics, Algorithm", "5", "https://en.wikipedia.org/wiki/Muhammad_ibn_Musa_al-Khwarizmi#Arithmetic"
"zaJohn Vincent Atanasoff", "1939", "The #{Atanasoff-Berry computer} (ABC) was the first automatic #{electronic digital computer|electronic computer}. The ABC's priority is debated among historians of computer technology, because it was not programmable, nor Turing-complete.", "Electronic Computer, Computer", "4", "https://en.wikipedia.org/wiki/Atanasoff%E2%80%93Berry_computer"
"zaCharles Babbage", "1825", "Invented the #{Difference Engine}, an automatic mechanical calculator designed to tabulate polynomial functions. It was not programmable, nor Turing-complete.", "Difference Engine, Mechanical Computer, Computer", "5", "https://en.wikipedia.org/wiki/Difference_engine"
"zaCharles Babbage", "1837", "Designed the #{Analytical Engine}. The first, general-purpose, programmable computer. It was 100 years ahead of it's time.", "Analytical Engine, Mechanical Computer, Computer, Punch Cards", "5", "https://en.wikipedia.org/wiki/Analytical_engine"
"zaJohn Backus", "1953", "Created #{Speedcoding}, also known As #{Speedcode}, the first high level #{programming language} built for an #{IBM} computer.", "Speedcoding, Speedcode, Programming Language, IBM", "4", "https://en.wikipedia.org/wiki/Speedcoding"
"zaJohn Backus", "1954", "Lead a team who developed #{FORTRAN} for the #{IBM} 704 computer. #{FORTRAN} was one of the first high-level #{programming languages|programming language} that saw wide-spread use.", "FORTRAN, Programming Language, IBM", "5", "https://en.wikipedia.org/wiki/Fortran"
"zaJohn Backus", "1959", "Served on the design committee for #{ALGOL} 60, an incredibly influential #{programming language} which introduced lexical scoping, code blocks and many syntactical elements common today (if, then, while, for, do, begin, end, etc).", "ALGOL, Programming Language", "4", "https://en.wikipedia.org/wiki/ALGOL_60"
"zaJohn Backus", "1960", "Invented the Backus-Naur Form (previously known as Backus Normal Form), a notation for context-free grammars which is used to describe the syntax of #{programming languages|programming language}.", "BNF, Backus-Naur Form, Backus Normal Form, Programming Language", "4", "https://en.wikipedia.org/wiki/Backus%E2%80%93Naur_Form"
"zaJohn Backus", "1977", "Created #{FP}, a function-level #{programming language}. #{FP} helped spark an interest in the #{functional programming} paradigm.", "FP, Functional Programming, Function-Level Programming, Programming Language", "2", "https://en.wikipedia.org/wiki/FP_(programming_language)"
"zaJohn Backus", "1989", "Created #{FL}, a #{function-level programming} language that is considered a successor to #{FP}.", "FL, Function-Level Programming, Functional Programming, Programming Language", "2", "https://en.wikipedia.org/wiki/FL_(programming_language)"
"zaJean Bartik", "1946", "Became one of the six original programmers on #{ENIAC}.", "ENIAC, Programming", "3", "https://en.wikipedia.org/wiki/ENIAC#Programming"
"zaJean Bartik", "1948", "Was part of a team charged with developing the concept of the 'stored program #{computer}'.", "Computer", "3", "https://en.wikipedia.org/wiki/Stored-program_computer"
"zaJean Bartik", "1949", "Helped develop the #{BINAC} AND #{UNIVAC} I computers.", "BINAC, UNIVAC, Programming, Computer", "3", "https://en.wikipedia.org/wiki/Jean_Bartik#Career_as_a_computer_programmer"
"zaTim Berners-Lee", "1980", "Invented ENQUIRE, a system for sharing documents over the #{Internet}.", "Internet, WWW", "4", "https://en.wikipedia.org/wiki/ENQUIRE"
"zaTim Berners-Lee", "1989", "Invented WorldWideWeb, the first #{Web Browser|WWW}.", "Internet, WWW", "5", "https://en.wikipedia.org/wiki/WorldWideWeb"
"zaTim Berners-Lee", "1990", "Along with Ari Luotonen and Henrik Frystyk, invented CERN HTTPd, the first #{Web Server|HTTP}. It ran as a daemon and was written in C.", "Internet, WWW, HTTP", "5", "https://en.wikipedia.org/wiki/CERN_httpd"
"zaTim Berners-Lee", "1990", "Specified #{HTML}, an SGML-based markup language for describing #{hypertext} documents. Originally, #{HTML} only included 18 tags.", "Internet, Hypertext, WWW, HTML", "5", "https://en.wikipedia.org/wiki/HTML"
"zaTim Berners-Lee", "1991", "Formally released the Hypertext Transport Protocol (#{HTTP}) version 0.9 along with a team of Engineers. #{HTTP} v0.9 was only capable of GET requests.", "Internet, WWW, HTTP", "5", "https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol"
"zaGeorge Boole", "1847", "Invented Symbolic #{Logic}, the basis for Boolean Algebra, a mathematical system for describing logical relations. It would become the basis for electronic #{circuit design}.", "Mathematics, Logic, Circuit Design", "5", "https://en.wikipedia.org/wiki/Boolean_algebra"
"zaGeorge Boole", "1854", "Published 'The Laws of Thought', which further laid-out #{algebraic logic|Logic}.", "Mathematics, Logic", "4", "https://en.wikipedia.org/wiki/The_Laws_of_Thought"
"zaPer Brinch Hansen", "1969", "Primary developer of the RC 4000 Multiprogramming System (also known as Monitor), the first #{operating system} to implement a kernel. Although not particularly successful, it was hugely influential in the design of future #{operating systems}.", "Operating System, RC 4000", "3", "https://en.wikipedia.org/wiki/RC_4000_multiprogramming_system"
"zaPer Brinch Hansen", "1973", "Published 'Operating System Principles', the first comprehensive textbok on #{operating systems}. It was hailed for it's simplicity and clarity in treatment of a complex subject.", "Operating System, Book", "3", "https://en.wikipedia.org/wiki/Per_Brinch_Hansen#Operating_Systems"
"zaPer Brinch Hansen", "1973", "Along with Tony Hoare, invented #{Monitors}, a construct for allowing #{threads|Concurrency} to have mutual exclusion and the ability to wait/block for conditions to become true.", "Concurrency, Monitors", "3", "https://en.wikipedia.org/wiki/Per_Brinch_Hansen#Operating_Systems"
"zaPer Brinch Hansen", "1975", "Invented Concurrent #{Pascal}, the first #{programming language} to implement #{monitors}.", "Concurrency, Programming Language, Pascal, Monitors", "3", "https://en.wikipedia.org/wiki/Concurrent_Pascal"
"zaPer Brinch Hansen", "1977", "Published 'The Architecture of Concurrent Programs', the first comprehensive textbok on #{concurrent programming|Concurrency}.", "Concurrency, Book", "2", "https://en.wikipedia.org/wiki/Per_Brinch_Hansen#Operating_Systems"
"zaPer Brinch Hansen", "1978", "Published a paper on #{distributed proceses|Distributed Computing}, which introduced concepts which are now known as #{remote procedure calling|RPC} (RPC). RPC is a technique for executing code in a remote address space (such as another computer in a network).", "Distributed Computing, RPC, Paper", "3", "https://en.wikipedia.org/wiki/Remote_procedure_call"
"zaNikolay Brusentsov", "1958", "Invented #{Setun}, a balanced #{ternary} #{computer}. Setun used three fundamental values (-1, 0, 1) instead of the more common two values (0, 1) in #{binary} computers.", "Computer, Ternary, Setun", "3", "https://en.wikipedia.org/wiki/Setun"
"zaNikolay Brusentsov", "1970", "Invented #{Setun} 70, whose #{CPU} design presented many concepts that would later be incorporated (perhaps independently) into the #{Reduced Instruction-Set Computing|RISC} (RISC) architecture.", "Computer, Setun, RISC, CPU", "3", "http://en.uacomputing.com/persons/brusentsov/"
"zaVannevar Bush", "1945", "Published 'As We May Think', an article which introduced the #{Memex} - a theoretical electronic device that would allow users to store and retrieve books, records and communications. The design involved linking documents via association, which would come to be very influential in the creation of #{hypertext} systems.", "Computer, Memex, Hypertext", "4", "https://en.wikipedia.org/wiki/Memex"
"zaDavid Caminer", "1951", "Helped design the #{Lyons Electonic Office} (LEO) computer, which was the first business #{computer}. For his effort, David Caminer is often called the world's first Software Engineer.", "Computer, LEO", "3", "https://en.wikipedia.org/wiki/LEO_%28computer%29"
"zaVint Cerf", "1973", "Conducted research around the notion of packet-switching #{network|Networking} protocols.", "Networking, Internet", "3", "https://en.wikipedia.org/wiki/Vint_Cerf"
"zaVint Cerf", "1975", "Co-designed the #{TCP/IP} #{network|Networking} protocol suite for the US Department of Defense.", "TCP/IP, Networking, Internet", "4", "https://en.wikipedia.org/wiki/Internet_protocol_suite"
"zaVint Cerf", "1984", "Lead engineer on MCI Mail, the first commercial #{email} service to be connected to the #{Internet}", "Email, Networking, Internet", "4", "https://en.wikipedia.org/wiki/MCI_Mail"
"zaVint Cerf", "1992", "Co-founded the Internet Society to provide guidance for standards and education related to the #{Internet}.", "Internet", "2", "https://en.wikipedia.org/wiki/Internet_Society"
"zaNoam Chomsky", "1956", "Invented the Chomsky Hierarchy, which is a set of classes of formal grammars that have become especially important in the creation of #{compilers} and #{interpreters} in #{computer programming|Programming Language}.", "Compiler, Programming Language, Formal Grammar", "4", "https://en.wikipedia.org/wiki/Chomsky_hierarchy"
"zaAlonzo Church", "1936", "Invented #{lambda calculus}, a formal mathematical system for presenting #{computation} based purely on function abstraction and application. Lambda calculus proved to be a universal model of #{computation} that would be incredibly important in the development of #{programming languages}.", "Lambda Calculus, Computation, Programming Language", "5", "https://en.wikipedia.org/wiki/Lambda_calculus"
"zaAlonzo Church", "1935", "Provided a negative answer to the #{Entscheidungsproblem}, which asks if there is an algorithm to determine if an axiom is true in all models of a theory. This would have great impact on the theory of #{computation} in later years.", "Computation, Entscheidungsproblem", "4", "https://en.wikipedia.org/wiki/Entscheidungsproblem"
"zaAlonzo Church", "1936", "Co-articulated what has become known as the #{Church-Turing Thesis}, which asserts that for any operation carried out by an algorithm there exists an equivalent #{lambda expression|Lambda Calculus} (or #{Turing Machine}). This would have great impact on the theory of #{computation} in later years.", "Computation, Church-Turing Thesis", "5", "https://en.wikipedia.org/wiki/Church%E2%80%93Turing_thesis"
"zaWesley A. Clark", "1955", "Created the logic systems for the #{TX-0} (Transistorized Experimental computer zero) #{computer}, an early fully-transistorized digital computer that was used at MIT.", "Computer, TX-0, Computer", "3", "https://en.wikipedia.org/wiki/TX-0"
"zaWesley A. Clark", "1958", "Chief Architect for the #{TX-2} (Transistorized Experimental computer two) #{computer}, an early fully-transistorized digital computer that was important in the advancement of the field of #{artificial intelligence}.", "Computer, TX-2, Computer, Artificial Intelligence", "3", "https://en.wikipedia.org/wiki/TX-2"
"zaWesley A. Clark", "1962", "Co-designed #{LINC}, the world's first #{minicomputer} and forerunner to the now ubiquitous personal #{computer}. #{LINC} would go on to inspire many ideas for the wildly successful #{PDP-8} minicomputer.", "Computer, Minicomputer, LINC, Computer", "4", "https://en.wikipedia.org/wiki/LINC"
"zaEdmund M. Clarke", "1979", "Published a paper proving that for certain #{programming language} constructs it is impossible to obtain good #{Hoare Axiom Systems|Hoare Logic}. The paper demonstrated that #{recursive|Recursion} procedures with parameters in languages with a static scope for identifiers and #{coroutines} in languages that allow parameterless #{recursive|Recursion} procedures cannot be proven correct via the #{Hoare Logic} formal system.", "Programming Language, Hoare Logic", "2", "http://www.cs.cmu.edu/~emc/papers/Papers%20In%20Refereed%20Journals/79_impossible_hoareaxiom.pdf"
"zaEdmund M. Clarke", "1981", "Along with his student E. Allen Emerson, invented and developed #{model checking}, a system for mathematically verifying that a given model meets a formal specification. This would become important for the verification of hardware systems.", "Model Checking, Hardware", "3", "https://en.wikipedia.org/wiki/Model_checking"
"zaEdgar F. Codd", "1970", "Published a paper entitled 'A Relational Model of Data for Large Shared Data Banks', which laid the theoretical foundations for relational databases and query languages such as SQL.", "Database, Relational Database", "4", "https://en.wikipedia.org/wiki/Edgar_F._Codd#Work"
"zaDouglas Engelbart", "1965", "Along with his team, invented the concepts for bitmapped screen displays.", "Bitmap, Hardware", "4", "https://en.wikipedia.org/wiki/Raster_graphics"
"zaDouglas Engelbart", "1965", "Along with his team, invented early systems implementing the foundations for #{hypertext} - interlinked systems of documents.", "Hypertext, Internet", "4", "https://en.wikipedia.org/wiki/Hypertext#History"
"zaDouglas Engelbart", "1967", "Along with Bill English, invented the #{computer mouse|Mouse} in the form of a wooden shell atop two metal wheels. It was described as an 'X-Y position indicator for a display system'.", "Mouse, Hardware", "5", "https://en.wikipedia.org/wiki/Computer_mouse"
"zaDouglas Engelbart", "1968", "Presented and demonstrated original inventions including the #{Computer Mouse|Mouse}, #{Computer Networks|Network}, #{Hypertext} and several others.", "Demonstration", "2", "https://en.wikipedia.org/wiki/The_Mother_of_All_Demos"
"zaE. Allen Emerson", "1981", "Along with Edmund M. Clarke, invented and developed #{model checking}, a system for mathematically verifying that a given model meets a formal specification. This would become important for the verification of hardware systems.", "Model Checking, Hardware", "3", "https://en.wikipedia.org/wiki/Model_checking"
"zaStephen Cook", "1971", "Published the seminal paper 'The Complexity of Theorem Proving Procedures', which introduced the notions of Cook Reduction and #{NP-Completeness|NP-Complete}. NP-Completeness refers to problems for which no efficient algorithm exists. The paper also famously posed the #{P vs. NP} question.", "NP-Complete, Computation, Complexity, P vs. NP", "4", "https://en.wikipedia.org/wiki/NP-complete"
"zaaMuhammad ibn Musa al-Khwarizmi", "800", "The term '#{algorithm}' is derived from the algorism, the technique of performing arithmetic with Hindu-Arabic numerals developed by al-Khwarizmi. Both '#{algorithm}' and 'algorism' are derived from the Latinized forms of al-Khwarizmi's name, Algoritmi and Algorismi, respectively.", "Mathematics, Algorithm", "5", "https://en.wikipedia.org/wiki/Muhammad_ibn_Musa_al-Khwarizmi#Arithmetic"
"zaaJohn Vincent Atanasoff", "1939", "The #{Atanasoff-Berry computer} (ABC) was the first automatic #{electronic digital computer|electronic computer}. The ABC's priority is debated among historians of computer technology, because it was not programmable, nor Turing-complete.", "Electronic Computer, Computer", "4", "https://en.wikipedia.org/wiki/Atanasoff%E2%80%93Berry_computer"
"zaaCharles Babbage", "1825", "Invented the #{Difference Engine}, an automatic mechanical calculator designed to tabulate polynomial functions. It was not programmable, nor Turing-complete.", "Difference Engine, Mechanical Computer, Computer", "5", "https://en.wikipedia.org/wiki/Difference_engine"
"zaaCharles Babbage", "1837", "Designed the #{Analytical Engine}. The first, general-purpose, programmable computer. It was 100 years ahead of it's time.", "Analytical Engine, Mechanical Computer, Computer, Punch Cards", "5", "https://en.wikipedia.org/wiki/Analytical_engine"
"zaaJohn Backus", "1953", "Created #{Speedcoding}, also known As #{Speedcode}, the first high level #{programming language} built for an #{IBM} computer.", "Speedcoding, Speedcode, Programming Language, IBM", "4", "https://en.wikipedia.org/wiki/Speedcoding"
"zaaJohn Backus", "1954", "Lead a team who developed #{FORTRAN} for the #{IBM} 704 computer. #{FORTRAN} was one of the first high-level #{programming languages|programming language} that saw wide-spread use.", "FORTRAN, Programming Language, IBM", "5", "https://en.wikipedia.org/wiki/Fortran"
"zaaJohn Backus", "1959", "Served on the design committee for #{ALGOL} 60, an incredibly influential #{programming language} which introduced lexical scoping, code blocks and many syntactical elements common today (if, then, while, for, do, begin, end, etc).", "ALGOL, Programming Language", "4", "https://en.wikipedia.org/wiki/ALGOL_60"
"zaaJohn Backus", "1960", "Invented the Backus-Naur Form (previously known as Backus Normal Form), a notation for context-free grammars which is used to describe the syntax of #{programming languages|programming language}.", "BNF, Backus-Naur Form, Backus Normal Form, Programming Language", "4", "https://en.wikipedia.org/wiki/Backus%E2%80%93Naur_Form"
"zaaJohn Backus", "1977", "Created #{FP}, a function-level #{programming language}. #{FP} helped spark an interest in the #{functional programming} paradigm.", "FP, Functional Programming, Function-Level Programming, Programming Language", "2", "https://en.wikipedia.org/wiki/FP_(programming_language)"
"zaaJohn Backus", "1989", "Created #{FL}, a #{function-level programming} language that is considered a successor to #{FP}.", "FL, Function-Level Programming, Functional Programming, Programming Language", "2", "https://en.wikipedia.org/wiki/FL_(programming_language)"
"zaaJean Bartik", "1946", "Became one of the six original programmers on #{ENIAC}.", "ENIAC, Programming", "3", "https://en.wikipedia.org/wiki/ENIAC#Programming"
"zaaJean Bartik", "1948", "Was part of a team charged with developing the concept of the 'stored program #{computer}'.", "Computer", "3", "https://en.wikipedia.org/wiki/Stored-program_computer"
"zaaJean Bartik", "1949", "Helped develop the #{BINAC} AND #{UNIVAC} I computers.", "BINAC, UNIVAC, Programming, Computer", "3", "https://en.wikipedia.org/wiki/Jean_Bartik#Career_as_a_computer_programmer"
"zaaTim Berners-Lee", "1980", "Invented ENQUIRE, a system for sharing documents over the #{Internet}.", "Internet, WWW", "4", "https://en.wikipedia.org/wiki/ENQUIRE"
"zaaTim Berners-Lee", "1989", "Invented WorldWideWeb, the first #{Web Browser|WWW}.", "Internet, WWW", "5", "https://en.wikipedia.org/wiki/WorldWideWeb"
"zaaTim Berners-Lee", "1990", "Along with Ari Luotonen and Henrik Frystyk, invented CERN HTTPd, the first #{Web Server|HTTP}. It ran as a daemon and was written in C.", "Internet, WWW, HTTP", "5", "https://en.wikipedia.org/wiki/CERN_httpd"
"zaaTim Berners-Lee", "1990", "Specified #{HTML}, an SGML-based markup language for describing #{hypertext} documents. Originally, #{HTML} only included 18 tags.", "Internet, Hypertext, WWW, HTML", "5", "https://en.wikipedia.org/wiki/HTML"
"zaaTim Berners-Lee", "1991", "Formally released the Hypertext Transport Protocol (#{HTTP}) version 0.9 along with a team of Engineers. #{HTTP} v0.9 was only capable of GET requests.", "Internet, WWW, HTTP", "5", "https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol"
"zaaGeorge Boole", "1847", "Invented Symbolic #{Logic}, the basis for Boolean Algebra, a mathematical system for describing logical relations. It would become the basis for electronic #{circuit design}.", "Mathematics, Logic, Circuit Design", "5", "https://en.wikipedia.org/wiki/Boolean_algebra"
"zaaGeorge Boole", "1854", "Published 'The Laws of Thought', which further laid-out #{algebraic logic|Logic}.", "Mathematics, Logic", "4", "https://en.wikipedia.org/wiki/The_Laws_of_Thought"
"zaaPer Brinch Hansen", "1969", "Primary developer of the RC 4000 Multiprogramming System (also known as Monitor), the first #{operating system} to implement a kernel. Although not particularly successful, it was hugely influential in the design of future #{operating systems}.", "Operating System, RC 4000", "3", "https://en.wikipedia.org/wiki/RC_4000_multiprogramming_system"
"zaaPer Brinch Hansen", "1973", "Published 'Operating System Principles', the first comprehensive textbok on #{operating systems}. It was hailed for it's simplicity and clarity in treatment of a complex subject.", "Operating System, Book", "3", "https://en.wikipedia.org/wiki/Per_Brinch_Hansen#Operating_Systems"
"zaaPer Brinch Hansen", "1973", "Along with Tony Hoare, invented #{Monitors}, a construct for allowing #{threads|Concurrency} to have mutual exclusion and the ability to wait/block for conditions to become true.", "Concurrency, Monitors", "3", "https://en.wikipedia.org/wiki/Per_Brinch_Hansen#Operating_Systems"
"zaaPer Brinch Hansen", "1975", "Invented Concurrent #{Pascal}, the first #{programming language} to implement #{monitors}.", "Concurrency, Programming Language, Pascal, Monitors", "3", "https://en.wikipedia.org/wiki/Concurrent_Pascal"
"zaaPer Brinch Hansen", "1977", "Published 'The Architecture of Concurrent Programs', the first comprehensive textbok on #{concurrent programming|Concurrency}.", "Concurrency, Book", "2", "https://en.wikipedia.org/wiki/Per_Brinch_Hansen#Operating_Systems"
"zaaPer Brinch Hansen", "1978", "Published a paper on #{distributed proceses|Distributed Computing}, which introduced concepts which are now known as #{remote procedure calling|RPC} (RPC). RPC is a technique for executing code in a remote address space (such as another computer in a network).", "Distributed Computing, RPC, Paper", "3", "https://en.wikipedia.org/wiki/Remote_procedure_call"
"zaaNikolay Brusentsov", "1958", "Invented #{Setun}, a balanced #{ternary} #{computer}. Setun used three fundamental values (-1, 0, 1) instead of the more common two values (0, 1) in #{binary} computers.", "Computer, Ternary, Setun", "3", "https://en.wikipedia.org/wiki/Setun"
"zaaNikolay Brusentsov", "1970", "Invented #{Setun} 70, whose #{CPU} design presented many concepts that would later be incorporated (perhaps independently) into the #{Reduced Instruction-Set Computing|RISC} (RISC) architecture.", "Computer, Setun, RISC, CPU", "3", "http://en.uacomputing.com/persons/brusentsov/"
"zaaVannevar Bush", "1945", "Published 'As We May Think', an article which introduced the #{Memex} - a theoretical electronic device that would allow users to store and retrieve books, records and communications. The design involved linking documents via association, which would come to be very influential in the creation of #{hypertext} systems.", "Computer, Memex, Hypertext", "4", "https://en.wikipedia.org/wiki/Memex"
"zaaDavid Caminer", "1951", "Helped design the #{Lyons Electonic Office} (LEO) computer, which was the first business #{computer}. For his effort, David Caminer is often called the world's first Software Engineer.", "Computer, LEO", "3", "https://en.wikipedia.org/wiki/LEO_%28computer%29"
"zaaVint Cerf", "1973", "Conducted research around the notion of packet-switching #{network|Networking} protocols.", "Networking, Internet", "3", "https://en.wikipedia.org/wiki/Vint_Cerf"
"zaaVint Cerf", "1975", "Co-designed the #{TCP/IP} #{network|Networking} protocol suite for the US Department of Defense.", "TCP/IP, Networking, Internet", "4", "https://en.wikipedia.org/wiki/Internet_protocol_suite"
"zaaVint Cerf", "1984", "Lead engineer on MCI Mail, the first commercial #{email} service to be connected to the #{Internet}", "Email, Networking, Internet", "4", "https://en.wikipedia.org/wiki/MCI_Mail"
"zaaVint Cerf", "1992", "Co-founded the Internet Society to provide guidance for standards and education related to the #{Internet}.", "Internet", "2", "https://en.wikipedia.org/wiki/Internet_Society"
"zaaNoam Chomsky", "1956", "Invented the Chomsky Hierarchy, which is a set of classes of formal grammars that have become especially important in the creation of #{compilers} and #{interpreters} in #{computer programming|Programming Language}.", "Compiler, Programming Language, Formal Grammar", "4", "https://en.wikipedia.org/wiki/Chomsky_hierarchy"
"zaaAlonzo Church", "1936", "Invented #{lambda calculus}, a formal mathematical system for presenting #{computation} based purely on function abstraction and application. Lambda calculus proved to be a universal model of #{computation} that would be incredibly important in the development of #{programming languages}.", "Lambda Calculus, Computation, Programming Language", "5", "https://en.wikipedia.org/wiki/Lambda_calculus"
"zaaAlonzo Church", "1935", "Provided a negative answer to the #{Entscheidungsproblem}, which asks if there is an algorithm to determine if an axiom is true in all models of a theory. This would have great impact on the theory of #{computation} in later years.", "Computation, Entscheidungsproblem", "4", "https://en.wikipedia.org/wiki/Entscheidungsproblem"
"zaaAlonzo Church", "1936", "Co-articulated what has become known as the #{Church-Turing Thesis}, which asserts that for any operation carried out by an algorithm there exists an equivalent #{lambda expression|Lambda Calculus} (or #{Turing Machine}). This would have great impact on the theory of #{computation} in later years.", "Computation, Church-Turing Thesis", "5", "https://en.wikipedia.org/wiki/Church%E2%80%93Turing_thesis"
"zaaWesley A. Clark", "1955", "Created the logic systems for the #{TX-0} (Transistorized Experimental computer zero) #{computer}, an early fully-transistorized digital computer that was used at MIT.", "Computer, TX-0, Computer", "3", "https://en.wikipedia.org/wiki/TX-0"
"zaaWesley A. Clark", "1958", "Chief Architect for the #{TX-2} (Transistorized Experimental computer two) #{computer}, an early fully-transistorized digital computer that was important in the advancement of the field of #{artificial intelligence}.", "Computer, TX-2, Computer, Artificial Intelligence", "3", "https://en.wikipedia.org/wiki/TX-2"
"zaaWesley A. Clark", "1962", "Co-designed #{LINC}, the world's first #{minicomputer} and forerunner to the now ubiquitous personal #{computer}. #{LINC} would go on to inspire many ideas for the wildly successful #{PDP-8} minicomputer.", "Computer, Minicomputer, LINC, Computer", "4", "https://en.wikipedia.org/wiki/LINC"
"zaaEdmund M. Clarke", "1979", "Published a paper proving that for certain #{programming language} constructs it is impossible to obtain good #{Hoare Axiom Systems|Hoare Logic}. The paper demonstrated that #{recursive|Recursion} procedures with parameters in languages with a static scope for identifiers and #{coroutines} in languages that allow parameterless #{recursive|Recursion} procedures cannot be proven correct via the #{Hoare Logic} formal system.", "Programming Language, Hoare Logic", "2", "http://www.cs.cmu.edu/~emc/papers/Papers%20In%20Refereed%20Journals/79_impossible_hoareaxiom.pdf"
"zaaEdmund M. Clarke", "1981", "Along with his student E. Allen Emerson, invented and developed #{model checking}, a system for mathematically verifying that a given model meets a formal specification. This would become important for the verification of hardware systems.", "Model Checking, Hardware", "3", "https://en.wikipedia.org/wiki/Model_checking"
"zaaEdgar F. Codd", "1970", "Published a paper entitled 'A Relational Model of Data for Large Shared Data Banks', which laid the theoretical foundations for relational databases and query languages such as SQL.", "Database, Relational Database", "4", "https://en.wikipedia.org/wiki/Edgar_F._Codd#Work"
"zaaDouglas Engelbart", "1965", "Along with his team, invented the concepts for bitmapped screen displays.", "Bitmap, Hardware", "4", "https://en.wikipedia.org/wiki/Raster_graphics"
"zaaDouglas Engelbart", "1965", "Along with his team, invented early systems implementing the foundations for #{hypertext} - interlinked systems of documents.", "Hypertext, Internet", "4", "https://en.wikipedia.org/wiki/Hypertext#History"
"zaaDouglas Engelbart", "1967", "Along with Bill English, invented the #{computer mouse|Mouse} in the form of a wooden shell atop two metal wheels. It was described as an 'X-Y position indicator for a display system'.", "Mouse, Hardware", "5", "https://en.wikipedia.org/wiki/Computer_mouse"
"zaaDouglas Engelbart", "1968", "Presented and demonstrated original inventions including the #{Computer Mouse|Mouse}, #{Computer Networks|Network}, #{Hypertext} and several others.", "Demonstration", "2", "https://en.wikipedia.org/wiki/The_Mother_of_All_Demos"
"zaaE. Allen Emerson", "1981", "Along with Edmund M. Clarke, invented and developed #{model checking}, a system for mathematically verifying that a given model meets a formal specification. This would become important for the verification of hardware systems.", "Model Checking, Hardware", "3", "https://en.wikipedia.org/wiki/Model_checking"
"zaaStephen Cook", "1971", "Published the seminal paper 'The Complexity of Theorem Proving Procedures', which introduced the notions of Cook Reduction and #{NP-Completeness|NP-Complete}. NP-Completeness refers to problems for which no efficient algorithm exists. The paper also famously posed the #{P vs. NP} question.", "NP-Complete, Computation, Complexity, P vs. NP", "4", "https://en.wikipedia.org/wiki/NP-complete"
"zaaaMuhammad ibn Musa al-Khwarizmi", "800", "The term '#{algorithm}' is derived from the algorism, the technique of performing arithmetic with Hindu-Arabic numerals developed by al-Khwarizmi. Both '#{algorithm}' and 'algorism' are derived from the Latinized forms of al-Khwarizmi's name, Algoritmi and Algorismi, respectively.", "Mathematics, Algorithm", "5", "https://en.wikipedia.org/wiki/Muhammad_ibn_Musa_al-Khwarizmi#Arithmetic"
"zaaaJohn Vincent Atanasoff", "1939", "The #{Atanasoff-Berry computer} (ABC) was the first automatic #{electronic digital computer|electronic computer}. The ABC's priority is debated among historians of computer technology, because it was not programmable, nor Turing-complete.", "Electronic Computer, Computer", "4", "https://en.wikipedia.org/wiki/Atanasoff%E2%80%93Berry_computer"
"zaaaCharles Babbage", "1825", "Invented the #{Difference Engine}, an automatic mechanical calculator designed to tabulate polynomial functions. It was not programmable, nor Turing-complete.", "Difference Engine, Mechanical Computer, Computer", "5", "https://en.wikipedia.org/wiki/Difference_engine"
"zaaaCharles Babbage", "1837", "Designed the #{Analytical Engine}. The first, general-purpose, programmable computer. It was 100 years ahead of it's time.", "Analytical Engine, Mechanical Computer, Computer, Punch Cards", "5", "https://en.wikipedia.org/wiki/Analytical_engine"
"zaaaJohn Backus", "1953", "Created #{Speedcoding}, also known As #{Speedcode}, the first high level #{programming language} built for an #{IBM} computer.", "Speedcoding, Speedcode, Programming Language, IBM", "4", "https://en.wikipedia.org/wiki/Speedcoding"
"zaaaJohn Backus", "1954", "Lead a team who developed #{FORTRAN} for the #{IBM} 704 computer. #{FORTRAN} was one of the first high-level #{programming languages|programming language} that saw wide-spread use.", "FORTRAN, Programming Language, IBM", "5", "https://en.wikipedia.org/wiki/Fortran"
"zaaaJohn Backus", "1959", "Served on the design committee for #{ALGOL} 60, an incredibly influential #{programming language} which introduced lexical scoping, code blocks and many syntactical elements common today (if, then, while, for, do, begin, end, etc).", "ALGOL, Programming Language", "4", "https://en.wikipedia.org/wiki/ALGOL_60"
"zaaaJohn Backus", "1960", "Invented the Backus-Naur Form (previously known as Backus Normal Form), a notation for context-free grammars which is used to describe the syntax of #{programming languages|programming language}.", "BNF, Backus-Naur Form, Backus Normal Form, Programming Language", "4", "https://en.wikipedia.org/wiki/Backus%E2%80%93Naur_Form"
"zaaaJohn Backus", "1977", "Created #{FP}, a function-level #{programming language}. #{FP} helped spark an interest in the #{functional programming} paradigm.", "FP, Functional Programming, Function-Level Programming, Programming Language", "2", "https://en.wikipedia.org/wiki/FP_(programming_language)"
"zaaaJohn Backus", "1989", "Created #{FL}, a #{function-level programming} language that is considered a successor to #{FP}.", "FL, Function-Level Programming, Functional Programming, Programming Language", "2", "https://en.wikipedia.org/wiki/FL_(programming_language)"
"zaaaJean Bartik", "1946", "Became one of the six original programmers on #{ENIAC}.", "ENIAC, Programming", "3", "https://en.wikipedia.org/wiki/ENIAC#Programming"
"zaaaJean Bartik", "1948", "Was part of a team charged with developing the concept of the 'stored program #{computer}'.", "Computer", "3", "https://en.wikipedia.org/wiki/Stored-program_computer"
"zaaaJean Bartik", "1949", "Helped develop the #{BINAC} AND #{UNIVAC} I computers.", "BINAC, UNIVAC, Programming, Computer", "3", "https://en.wikipedia.org/wiki/Jean_Bartik#Career_as_a_computer_programmer"
"zaaaTim Berners-Lee", "1980", "Invented ENQUIRE, a system for sharing documents over the #{Internet}.", "Internet, WWW", "4", "https://en.wikipedia.org/wiki/ENQUIRE"
"zaaaTim Berners-Lee", "1989", "Invented WorldWideWeb, the first #{Web Browser|WWW}.", "Internet, WWW", "5", "https://en.wikipedia.org/wiki/WorldWideWeb"
"zaaaTim Berners-Lee", "1990", "Along with Ari Luotonen and Henrik Frystyk, invented CERN HTTPd, the first #{Web Server|HTTP}. It ran as a daemon and was written in C.", "Internet, WWW, HTTP", "5", "https://en.wikipedia.org/wiki/CERN_httpd"
"zaaaTim Berners-Lee", "1990", "Specified #{HTML}, an SGML-based markup language for describing #{hypertext} documents. Originally, #{HTML} only included 18 tags.", "Internet, Hypertext, WWW, HTML", "5", "https://en.wikipedia.org/wiki/HTML"
"zaaaTim Berners-Lee", "1991", "Formally released the Hypertext Transport Protocol (#{HTTP}) version 0.9 along with a team of Engineers. #{HTTP} v0.9 was only capable of GET requests.", "Internet, WWW, HTTP", "5", "https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol"
"zaaaGeorge Boole", "1847", "Invented Symbolic #{Logic}, the basis for Boolean Algebra, a mathematical system for describing logical relations. It would become the basis for electronic #{circuit design}.", "Mathematics, Logic, Circuit Design", "5", "https://en.wikipedia.org/wiki/Boolean_algebra"
"zaaaGeorge Boole", "1854", "Published 'The Laws of Thought', which further laid-out #{algebraic logic|Logic}.", "Mathematics, Logic", "4", "https://en.wikipedia.org/wiki/The_Laws_of_Thought"
"zaaaPer Brinch Hansen", "1969", "Primary developer of the RC 4000 Multiprogramming System (also known as Monitor), the first #{operating system} to implement a kernel. Although not particularly successful, it was hugely influential in the design of future #{operating systems}.", "Operating System, RC 4000", "3", "https://en.wikipedia.org/wiki/RC_4000_multiprogramming_system"
"zaaaPer Brinch Hansen", "1973", "Published 'Operating System Principles', the first comprehensive textbok on #{operating systems}. It was hailed for it's simplicity and clarity in treatment of a complex subject.", "Operating System, Book", "3", "https://en.wikipedia.org/wiki/Per_Brinch_Hansen#Operating_Systems"
"zaaaPer Brinch Hansen", "1973", "Along with Tony Hoare, invented #{Monitors}, a construct for allowing #{threads|Concurrency} to have mutual exclusion and the ability to wait/block for conditions to become true.", "Concurrency, Monitors", "3", "https://en.wikipedia.org/wiki/Per_Brinch_Hansen#Operating_Systems"
"zaaaPer Brinch Hansen", "1975", "Invented Concurrent #{Pascal}, the first #{programming language} to implement #{monitors}.", "Concurrency, Programming Language, Pascal, Monitors", "3", "https://en.wikipedia.org/wiki/Concurrent_Pascal"
"zaaaPer Brinch Hansen", "1977", "Published 'The Architecture of Concurrent Programs', the first comprehensive textbok on #{concurrent programming|Concurrency}.", "Concurrency, Book", "2", "https://en.wikipedia.org/wiki/Per_Brinch_Hansen#Operating_Systems"
"zaaaPer Brinch Hansen", "1978", "Published a paper on #{distributed proceses|Distributed Computing}, which introduced concepts which are now known as #{remote procedure calling|RPC} (RPC). RPC is a technique for executing code in a remote address space (such as another computer in a network).", "Distributed Computing, RPC, Paper", "3", "https://en.wikipedia.org/wiki/Remote_procedure_call"
"zaaaNikolay Brusentsov", "1958", "Invented #{Setun}, a balanced #{ternary} #{computer}. Setun used three fundamental values (-1, 0, 1) instead of the more common two values (0, 1) in #{binary} computers.", "Computer, Ternary, Setun", "3", "https://en.wikipedia.org/wiki/Setun"
"zaaaNikolay Brusentsov", "1970", "Invented #{Setun} 70, whose #{CPU} design presented many concepts that would later be incorporated (perhaps independently) into the #{Reduced Instruction-Set Computing|RISC} (RISC) architecture.", "Computer, Setun, RISC, CPU", "3", "http://en.uacomputing.com/persons/brusentsov/"
"zaaaVannevar Bush", "1945", "Published 'As We May Think', an article which introduced the #{Memex} - a theoretical electronic device that would allow users to store and retrieve books, records and communications. The design involved linking documents via association, which would come to be very influential in the creation of #{hypertext} systems.", "Computer, Memex, Hypertext", "4", "https://en.wikipedia.org/wiki/Memex"
"zaaaDavid Caminer", "1951", "Helped design the #{Lyons Electonic Office} (LEO) computer, which was the first business #{computer}. For his effort, David Caminer is often called the world's first Software Engineer.", "Computer, LEO", "3", "https://en.wikipedia.org/wiki/LEO_%28computer%29"
"zaaaVint Cerf", "1973", "Conducted research around the notion of packet-switching #{network|Networking} protocols.", "Networking, Internet", "3", "https://en.wikipedia.org/wiki/Vint_Cerf"
"zaaaVint Cerf", "1975", "Co-designed the #{TCP/IP} #{network|Networking} protocol suite for the US Department of Defense.", "TCP/IP, Networking, Internet", "4", "https://en.wikipedia.org/wiki/Internet_protocol_suite"
"zaaaVint Cerf", "1984", "Lead engineer on MCI Mail, the first commercial #{email} service to be connected to the #{Internet}", "Email, Networking, Internet", "4", "https://en.wikipedia.org/wiki/MCI_Mail"
"zaaaVint Cerf", "1992", "Co-founded the Internet Society to provide guidance for standards and education related to the #{Internet}.", "Internet", "2", "https://en.wikipedia.org/wiki/Internet_Society"
"zaaaNoam Chomsky", "1956", "Invented the Chomsky Hierarchy, which is a set of classes of formal grammars that have become especially important in the creation of #{compilers} and #{interpreters} in #{computer programming|Programming Language}.", "Compiler, Programming Language, Formal Grammar", "4", "https://en.wikipedia.org/wiki/Chomsky_hierarchy"
"zaaaAlonzo Church", "1936", "Invented #{lambda calculus}, a formal mathematical system for presenting #{computation} based purely on function abstraction and application. Lambda calculus proved to be a universal model of #{computation} that would be incredibly important in the development of #{programming languages}.", "Lambda Calculus, Computation, Programming Language", "5", "https://en.wikipedia.org/wiki/Lambda_calculus"
"zaaaAlonzo Church", "1935", "Provided a negative answer to the #{Entscheidungsproblem}, which asks if there is an algorithm to determine if an axiom is true in all models of a theory. This would have great impact on the theory of #{computation} in later years.", "Computation, Entscheidungsproblem", "4", "https://en.wikipedia.org/wiki/Entscheidungsproblem"
"zaaaAlonzo Church", "1936", "Co-articulated what has become known as the #{Church-Turing Thesis}, which asserts that for any operation carried out by an algorithm there exists an equivalent #{lambda expression|Lambda Calculus} (or #{Turing Machine}). This would have great impact on the theory of #{computation} in later years.", "Computation, Church-Turing Thesis", "5", "https://en.wikipedia.org/wiki/Church%E2%80%93Turing_thesis"
"zaaaWesley A. Clark", "1955", "Created the logic systems for the #{TX-0} (Transistorized Experimental computer zero) #{computer}, an early fully-transistorized digital computer that was used at MIT.", "Computer, TX-0, Computer", "3", "https://en.wikipedia.org/wiki/TX-0"
"zaaaWesley A. Clark", "1958", "Chief Architect for the #{TX-2} (Transistorized Experimental computer two) #{computer}, an early fully-transistorized digital computer that was important in the advancement of the field of #{artificial intelligence}.", "Computer, TX-2, Computer, Artificial Intelligence", "3", "https://en.wikipedia.org/wiki/TX-2"
"zaaaWesley A. Clark", "1962", "Co-designed #{LINC}, the world's first #{minicomputer} and forerunner to the now ubiquitous personal #{computer}. #{LINC} would go on to inspire many ideas for the wildly successful #{PDP-8} minicomputer.", "Computer, Minicomputer, LINC, Computer", "4", "https://en.wikipedia.org/wiki/LINC"
"zaaaEdmund M. Clarke", "1979", "Published a paper proving that for certain #{programming language} constructs it is impossible to obtain good #{Hoare Axiom Systems|Hoare Logic}. The paper demonstrated that #{recursive|Recursion} procedures with parameters in languages with a static scope for identifiers and #{coroutines} in languages that allow parameterless #{recursive|Recursion} procedures cannot be proven correct via the #{Hoare Logic} formal system.", "Programming Language, Hoare Logic", "2", "http://www.cs.cmu.edu/~emc/papers/Papers%20In%20Refereed%20Journals/79_impossible_hoareaxiom.pdf"
"zaaaEdmund M. Clarke", "1981", "Along with his student E. Allen Emerson, invented and developed #{model checking}, a system for mathematically verifying that a given model meets a formal specification. This would become important for the verification of hardware systems.", "Model Checking, Hardware", "3", "https://en.wikipedia.org/wiki/Model_checking"
"zaaaEdgar F. Codd", "1970", "Published a paper entitled 'A Relational Model of Data for Large Shared Data Banks', which laid the theoretical foundations for relational databases and query languages such as SQL.", "Database, Relational Database", "4", "https://en.wikipedia.org/wiki/Edgar_F._Codd#Work"
"zaaaDouglas Engelbart", "1965", "Along with his team, invented the concepts for bitmapped screen displays.", "Bitmap, Hardware", "4", "https://en.wikipedia.org/wiki/Raster_graphics"
"zaaaDouglas Engelbart", "1965", "Along with his team, invented early systems implementing the foundations for #{hypertext} - interlinked systems of documents.", "Hypertext, Internet", "4", "https://en.wikipedia.org/wiki/Hypertext#History"
"zaaaDouglas Engelbart", "1967", "Along with Bill English, invented the #{computer mouse|Mouse} in the form of a wooden shell atop two metal wheels. It was described as an 'X-Y position indicator for a display system'.", "Mouse, Hardware", "5", "https://en.wikipedia.org/wiki/Computer_mouse"
"zaaaDouglas Engelbart", "1968", "Presented and demonstrated original inventions including the #{Computer Mouse|Mouse}, #{Computer Networks|Network}, #{Hypertext} and several others.", "Demonstration", "2", "https://en.wikipedia.org/wiki/The_Mother_of_All_Demos"
"zaaaE. Allen Emerson", "1981", "Along with Edmund M. Clarke, invented and developed #{model checking}, a system for mathematically verifying that a given model meets a formal specification. This would become important for the verification of hardware systems.", "Model Checking, Hardware", "3", "https://en.wikipedia.org/wiki/Model_checking"
"zaaaStephen Cook", "1971", "Published the seminal paper 'The Complexity of Theorem Proving Procedures', which introduced the notions of Cook Reduction and #{NP-Completeness|NP-Complete}. NP-Completeness refers to problems for which no efficient algorithm exists. The paper also famously posed the #{P vs. NP} question.", "NP-Complete, Computation, Complexity, P vs. NP", "4", "https://en.wikipedia.org/wiki/NP-complete"
